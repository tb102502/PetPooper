--[[
    UPDATED ItemConfig.lua - Adjusted Progression System
    Place in: ReplicatedStorage/ItemConfig.lua
    
    PROGRESSION CHANGES:
    ‚úÖ Garden (farm_plot_starter): 100 coins (unchanged)
    ‚úÖ Added wheat field access: 10,000 coins
    ‚úÖ Cave access: 250,000 coins (increased from 50,000)
    ‚úÖ Wheat seeds and scythe now require wheat field access
]]

local ItemConfig = {}

-- ========== RARITY SYSTEM ==========
ItemConfig.RaritySystem = {
	common    = { name = "Common",    color = Color3.fromRGB(255,255,255), sizeMultiplier = 1.0, valueMultiplier = 1.0, dropChance = 0.5, effects = {}, tier = 1 },
	uncommon  = { name = "Uncommon",  color = Color3.fromRGB(0,255,0),   sizeMultiplier = 1.1, valueMultiplier = 1.2, dropChance = 0.25, effects = {"sparkle"}, tier = 2 },
	rare      = { name = "Rare",      color = Color3.fromRGB(255,215,0), sizeMultiplier = 1.2, valueMultiplier = 1.5, dropChance = 0.07, effects = {"golden_shine"}, tier = 3 },
	epic      = { name = "Epic",      color = Color3.fromRGB(128,0,128), sizeMultiplier = 1.8, valueMultiplier = 2.0, dropChance = 0.025, effects = {"purple_aura"}, tier = 4 },
	legendary = { name = "Legendary", color = Color3.fromRGB(255,100,100), sizeMultiplier = 2.0, valueMultiplier = 3.0, dropChance = 0.005, effects = {"legendary_glow"}, tier = 5 },
}

-- ========== MINING SYSTEM DATA ==========
ItemConfig.MiningSystem = {}

-- Mining Ores
ItemConfig.MiningSystem.ores = {
	copper_ore = {
		id = "copper_ore",
		name = "Copper Ore",
		description = "Basic copper ore found in shallow caves.",
		color = Color3.fromRGB(184, 115, 51),
		hardness = 3,
		sellValue = 25,
		sellCurrency = "coins",
		xpReward = 15,
		respawnTime = 60, -- 1 minute
		requiredLevel = 1,
		rarity = "common",
		icon = "üü§"
	},

	bronze_ore = {
		id = "bronze_ore", 
		name = "Bronze Ore",
		description = "Stronger bronze ore with metallic properties.",
		color = Color3.fromRGB(139, 90, 43),
		hardness = 4,
		sellValue = 40,
		sellCurrency = "coins",
		xpReward = 25,
		respawnTime = 90, -- 1.5 minutes
		requiredLevel = 2,
		rarity = "common",
		icon = "üü´"
	},

	silver_ore = {
		id = "silver_ore",
		name = "Silver Ore", 
		description = "Precious silver ore with high value.",
		color = Color3.fromRGB(192, 192, 192),
		hardness = 6,
		sellValue = 75,
		sellCurrency = "coins",
		xpReward = 40,
		respawnTime = 120, -- 2 minutes
		requiredLevel = 3,
		rarity = "uncommon",
		icon = "‚ö™"
	},

	gold_ore = {
		id = "gold_ore",
		name = "Gold Ore",
		description = "Valuable gold ore found in deep caverns.",
		color = Color3.fromRGB(255, 215, 0),
		hardness = 8,
		sellValue = 150,
		sellCurrency = "coins", 
		xpReward = 60,
		respawnTime = 180, -- 3 minutes
		requiredLevel = 5,
		rarity = "rare",
		icon = "üü°"
	},

	platinum_ore = {
		id = "platinum_ore",
		name = "Platinum Ore",
		description = "Extremely rare platinum ore with exceptional value.",
		color = Color3.fromRGB(132, 135, 137),
		hardness = 12,
		sellValue = 300,
		sellCurrency = "coins",
		xpReward = 100,
		respawnTime = 300, -- 5 minutes
		requiredLevel = 7,
		rarity = "epic",
		icon = "‚ö´"
	},

	obsidian_ore = {
		id = "obsidian_ore",
		name = "Obsidian Ore",
		description = "Mystical obsidian ore from the deepest caves.",
		color = Color3.fromRGB(28, 28, 28),
		hardness = 15,
		sellValue = 100,
		sellCurrency = "farmTokens",
		xpReward = 150,
		respawnTime = 450, -- 7.5 minutes
		requiredLevel = 10,
		rarity = "legendary",
		icon = "‚¨õ"
	}
}

-- Mining Tools
ItemConfig.MiningSystem.tools = {
	wooden_pickaxe = {
		id = "wooden_pickaxe",
		name = "Wooden Pickaxe",
		description = "Basic wooden pickaxe for beginners.",
		speed = 1.0,
		durability = 50,
		canMine = {"copper_ore"},
		requiredLevel = 1,
		icon = "ü™ì"
	},

	basic_pickaxe = {
		id = "basic_pickaxe", 
		name = "Basic Pickaxe",
		description = "Essential tool for mining copper and bronze.",
		speed = 1.2,
		durability = 100,
		canMine = {"copper_ore", "bronze_ore"},
		requiredLevel = 1,
		icon = "‚õèÔ∏è"
	},

	stone_pickaxe = {
		id = "stone_pickaxe",
		name = "Stone Pickaxe", 
		description = "Improved pickaxe for mining harder ores.",
		speed = 1.5,
		durability = 150,
		canMine = {"copper_ore", "bronze_ore", "silver_ore"},
		requiredLevel = 2,
		icon = "ü™®"
	},

	iron_pickaxe = {
		id = "iron_pickaxe",
		name = "Iron Pickaxe",
		description = "Professional grade pickaxe for serious miners.",
		speed = 2.0,
		durability = 250,
		canMine = {"copper_ore", "bronze_ore", "silver_ore", "gold_ore"},
		requiredLevel = 4,
		icon = "‚öíÔ∏è"
	},

	diamond_pickaxe = {
		id = "diamond_pickaxe",
		name = "Diamond Pickaxe",
		description = "Premium pickaxe for the most valuable ores.",
		speed = 3.0,
		durability = 500,
		canMine = {"copper_ore", "bronze_ore", "silver_ore", "gold_ore", "platinum_ore"},
		requiredLevel = 6,
		icon = "üíé"
	},

	obsidian_pickaxe = {
		id = "obsidian_pickaxe",
		name = "Obsidian Pickaxe",
		description = "Legendary pickaxe capable of mining anything.",
		speed = 4.0,
		durability = 1000,
		canMine = {"copper_ore", "bronze_ore", "silver_ore", "gold_ore", "platinum_ore", "obsidian_ore"},
		requiredLevel = 8,
		icon = "‚¨õ"
	}
}

-- ========== CROP DATA ==========
ItemConfig.Crops = {
	carrot = { 
		id = "carrot", name = "ü•ï Carrot", type = "crop", category = "crops", 
		description = "Fresh orange carrot.", sellValue = 10, sellCurrency = "coins", 
		icon = "ü•ï", rarity = "common" 
	},
	potato = { 
		id = "potato", name = "ü•î Potato", type = "crop", category = "crops", 
		description = "Hearty potato.", sellValue = 15, sellCurrency = "coins", 
		icon = "ü•î", rarity = "common" 
	},
	cabbage = { 
		id = "cabbage", name = "ü•¨ Cabbage", type = "crop", category = "crops", 
		description = "Fresh leafy cabbage.", sellValue = 20, sellCurrency = "coins", 
		icon = "ü•¨", rarity = "common" 
	},
	radish = { 
		id = "radish", name = "üå∂Ô∏è Radish", type = "crop", category = "crops", 
		description = "Spicy radish.", sellValue = 25, sellCurrency = "coins", 
		icon = "üå∂Ô∏è", rarity = "common" 
	},

	broccoli = { 
		id = "broccoli", name = "ü•¶ Broccoli", type = "crop", category = "crops", 
		description = "Nutritious green broccoli.", sellValue = 30, sellCurrency = "coins", 
		icon = "ü•¶", rarity = "common" 
	},
	tomato = { 
		id = "tomato", name = "üçÖ Tomato", type = "crop", category = "crops", 
		description = "Juicy red tomato.", sellValue = 35, sellCurrency = "coins", 
		icon = "üçÖ", rarity = "uncommon" 
	},
	strawberry = { 
		id = "strawberry", name = "üçì Strawberry", type = "crop", category = "crops", 
		description = "Sweet red strawberry.", sellValue = 40, sellCurrency = "coins", 
		icon = "üçì", rarity = "uncommon" 
	},
	wheat = { 
		id = "wheat", name = "üåæ Wheat", type = "crop", category = "crops", 
		description = "Golden wheat grain.", sellValue = 5, sellCurrency = "coins", 
		icon = "üåæ", rarity = "uncommon" 
	},
	corn = { 
		id = "corn", name = "üåΩ Corn", type = "crop", category = "crops", 
		description = "Sweet yellow corn.", sellValue = 60, sellCurrency = "coins", 
		icon = "üåΩ", rarity = "uncommon" 
	},
	golden_fruit = { 
		id = "golden_fruit", name = "‚ú® Golden Fruit", type = "crop", category = "crops", 
		description = "Magical golden fruit.", sellValue = 400, sellCurrency = "coins", 
		icon = "‚ú®", rarity = "legendary" 
	},
	glorious_sunflower = { 
		id = "glorious_sunflower", name = "üåª Glorious Sunflower", type = "crop", category = "crops", 
		description = "üèÜ LEGENDARY PREMIUM CROP üèÜ", sellValue = 0, sellCurrency = "farmTokens", 
		icon = "üåª", rarity = "divine" 
	},
	broccarrot = {
		name = "Broccarrot",
		description = "A mysterious hybrid of broccoli and carrot with unique properties",
		sellPrice = 150, -- Higher value than parent crops
		rarity = "rare",
		harvestTime = 0, -- No growing time (only obtained through mutation)
		category = "mutation",
		parentCrops = {"broccoli", "carrot"},
		mutationTier = 1,
		emoji = "ü•¶ü•ï",
		specialProperties = {
			"hybrid_vigor", -- 25% chance for double harvest
			"nutrient_rich", -- Gives bonus nutrition when consumed
			"genetic_stability" -- Can be used as ingredient for advanced mutations
		}
	},
	broctato = {
		name = "Broctato",
		description = "A rare blend of broccoli and potato with earthy complexity",
		sellPrice = 200, -- Epic tier pricing
		rarity = "epic",
		harvestTime = 0,
		category = "mutation",
		parentCrops = {"broccoli", "potato"},
		mutationTier = 1,
		emoji = "ü•¶ü•î",
		specialProperties = {
			"earth_energy", -- Improves soil quality of adjacent plots
			"storage_mastery", -- Never spoils in inventory
			"mutation_catalyst", -- Increases mutation chances when present
			"epic_growth" -- Can trigger rare mutation chains
		}
	},

	craddish = {
		name = "Craddish",
		description = "A spicy cross between carrot and radish with fiery kick",
		sellPrice = 250, -- Uncommon tier pricing
		rarity = "uncommon",
		harvestTime = 0,
		category = "mutation",
		parentCrops = {"carrot", "radish"},
		mutationTier = 1,
		emoji = "ü•ïüå∂Ô∏è",
		specialProperties = {
			"spicy_kick", -- Adds heat resistance to animals
			"quick_growth", -- Accelerates nearby crop growth
			"pest_deterrent", -- Natural pest resistance
			"common_starter" -- Easiest mutation to achieve
		}				
	},		

	brocmato = {
		name = "Brocmato",
		description = "An unusual fusion of broccoli and tomato with vibrant flavors",
		sellPrice = 300,
		rarity = "rare", 
		harvestTime = 0,
		category = "mutation",
		parentCrops = {"broccoli", "tomato"},
		mutationTier = 2,
		emoji = "ü•¶üçÖ",
		specialProperties = {
			"flavor_burst", -- Enhanced taste profile
			"antioxidant_boost", -- Extra health benefits
			"color_changing" -- Changes appearance based on conditions
		}
	},	

	cornmato = {
		name = "Cornmato",
		description = "A golden hybrid of corn and tomato with explosive flavor",
		sellPrice = 350, -- Epic tier pricing
		rarity = "epic",
		harvestTime = 0,
		category = "mutation",
		parentCrops = {"corn", "tomato"},
		mutationTier = 2,
		emoji = "üåΩüçÖ",
		specialProperties = {
			"golden_essence", -- Increases coin rewards from other crops
			"flavor_explosion", -- Creates temporary taste enhancement field
			"solar_power", -- Grows faster in sunlight
			"premium_genetics" -- Unlocks advanced farming techniques
		}
	}
}
-- ========== UPDATED SHOP ITEMS WITH PROGRESSION SYSTEM ==========
ItemConfig.ShopItems = {

	-- ========== SEEDS CATEGORY (Beginner to Advanced) ==========

	carrot_seeds = {
		id = "carrot_seeds",
		name = "ü•ï Carrot Seeds",
		description = "Perfect starter crop! Fast-growing and profitable.\n\n‚è±Ô∏è Grow Time: 3 seconds\nüí∞ Sell Value: 10 coins each\n\nüéØ BEGINNER FRIENDLY - Start here!",
		price = 5,
		currency = "coins",
		category = "seeds",
		icon = "ü•ï",
		maxQuantity = 99,
		type = "seed",
		purchaseOrder = 1, -- FIRST seed - perfect for beginners
		farmingData = {
			growTime = 3,
			yieldAmount = 1,
			resultCropId = "carrot",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	potato_seeds = {
		id = "potato_seeds",
		name = "ü•î Potato Seeds",
		description = "Another great starter crop! Quick growth with good value.\n\n‚è±Ô∏è Grow Time: 5 seconds\nüí∞ Sell Value: 15 coins each\n\nüå± Perfect second crop to try!",
		price = 10,
		currency = "coins",
		category = "seeds",
		icon = "ü•î",
		maxQuantity = 99,
		type = "seed",
		purchaseOrder = 2, -- Second seed option
		farmingData = {
			growTime = 5, 
			yieldAmount = 1,
			resultCropId = "potato",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	cabbage_seeds = {
		id = "cabbage_seeds",
		name = "ü•¨ Cabbage Seeds",
		description = "Step up your farming! Nutritious leafy greens.\n\n‚è±Ô∏è Grow Time: 8 seconds\nüí∞ Sell Value: 20 coins each\n\nü•¨ Great for learning crop timing!",
		price = 15,
		currency = "coins",
		category = "seeds",
		icon = "ü•¨",
		maxQuantity = 99,
		type = "seed",
		purchaseOrder = 3, -- Third progression step
		farmingData = {
			growTime = 8,
			yieldAmount = 1,
			resultCropId = "cabbage",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	radish_seeds = {
		id = "radish_seeds",
		name = "üå∂Ô∏è Radish Seeds",
		description = "Mid-tier crop with spicy flavor and good profits!\n\n‚è±Ô∏è Grow Time: 10 seconds\nüí∞ Sell Value: 25 coins each\n\nüå∂Ô∏è Ready for intermediate farming!",
		price = 20,
		currency = "coins",
		category = "seeds",
		icon = "üå∂Ô∏è",
		maxQuantity = 99,
		type = "seed",
		purchaseOrder = 4, -- Mid-tier option
		farmingData = {
			growTime = 10,
			yieldAmount = 1,
			resultCropId = "radish",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},
	broccoli_seeds = {
		id = "broccoli_seeds",
		name = "ü•¶ Broccoli Seeds",
		description = "Nutritious green superfood! Takes patience but worth it.\n\n‚è±Ô∏è Grow Time: 15 seconds\nüí∞ Sell Value: 30 coins each\n\nü•¶",
		price = 25,
		currency = "coins",
		category = "seeds",
		icon = "ü•¶",
		maxQuantity = 99,
		type = "seed",
		purchaseOrder = 5, -- Advanced farming
		farmingData = {
			growTime = 15,
			yieldAmount = 1,
			resultCropId = "broccoli",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},
	tomato_seeds = {
		id = "tomato_seeds",
		name = "üçÖ Tomato Seeds",
		description = "Juicy cluster-growing tomatoes! Perfect for cooking.\n\n‚è±Ô∏è Grow Time: 20 seconds\nüí∞ Sell Value: 35 coins each\n\nüçÖ Multiple yield specialty crop!",
		price = 30,
		currency = "coins",
		category = "seeds",
		icon = "üçÖ",
		maxQuantity = 99,
		type = "seed",
		purchaseOrder = 6, -- Advanced specialty crop
		farmingData = {
			growTime = 20,
			yieldAmount = 1,
			resultCropId = "tomato",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	strawberry_seeds = {
		id = "strawberry_seeds",
		name = "üçì Strawberry Seeds",
		description = "Premium berries with excellent value! Worth the investment.\n\n‚è±Ô∏è Grow Time: 25 seconds\nüí∞ Sell Value: 40 coins each\n\nüçì High-value crop for experienced farmers!",
		price = 35,
		currency = "coins",
		category = "seeds",
		icon = "üçì",
		maxQuantity = 99,
		type = "seed",
		purchaseOrder = 7, -- Higher value option
		farmingData = {
			growTime = 25,
			yieldAmount = 1,
			resultCropId = "strawberry",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	-- UPDATED: Wheat seeds now require wheat field access
	wheat_seeds = {
		id = "wheat_seeds",
		name = "üåæ Wheat Seeds",
		description = "Essential grain crop for advanced farming operations.\n\n‚è±Ô∏è Grow Time: 30 seconds\nüí∞ Sell Value: 45 coins each\n\nüåæ Multiple yield crop - great efficiency!\n\n‚ö†Ô∏è Requires Wheat Field Access",
		price = 40,
		currency = "coins",
		category = "seeds",
		icon = "üåæ",
		maxQuantity = 99,
		type = "seed",
		purchaseOrder = 8, -- Advanced farming
		requiresPurchase = "wheat_field_access", -- NEW: Requires wheat field
		farmingData = {
			growTime = 30,
			yieldAmount = 1,
			resultCropId = "wheat",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	corn_seeds = {
		id = "corn_seeds",
		name = "üåΩ Corn Seeds",
		description = "High-value tall crop! Sweet corn that animals love.\n\n‚è±Ô∏è Grow Time: 35 seconds\nüí∞ Sell Value: 60 coins each\n\nüåΩ Premium regular crop with excellent returns!",
		price = 50,
		currency = "coins",
		category = "seeds",
		icon = "üåΩ",
		maxQuantity = 99,
		type = "seed",
		purchaseOrder = 9, -- Premium regular crop
		farmingData = {
			growTime = 35,
			yieldAmount = 1,
			resultCropId = "corn",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	golden_seeds = {
		id = "golden_seeds",
		name = "‚ú® Golden Seeds",
		description = "üèÜ PREMIUM FARM TOKEN CROP üèÜ\nMagical seeds that produce golden fruit!\n\n‚è±Ô∏è Grow Time: 60 seconds\nüí∞ Value: SPECIAL\n\n‚ú® Premium investment for serious farmers!",
		price = 250,
		currency = "farmTokens",
		category = "seeds",
		icon = "‚ú®",
		maxQuantity = 25,
		type = "seed",
		purchaseOrder = 10, -- Premium farm token crop
		farmingData = {
			growTime = 60,
			yieldAmount = 1,
			resultCropId = "golden_fruit",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	glorious_sunflower_seeds = {
		id = "glorious_sunflower_seeds",
		name = "üåª Glorious Sunflower Seeds",
		description = "üèÜ ULTIMATE LEGENDARY SEED üèÜ\nThe rarest and most magnificent crop! Massive size!\n\n‚è±Ô∏è Grow Time: 8+ minutes\nüí∞ Value: PRICELESS\n\nüåª THE ULTIMATE FARMING ACHIEVEMENT!",
		price = 999,
		currency = "farmTokens",
		category = "seeds",
		icon = "üåª",
		maxQuantity = 10,
		type = "seed",
		purchaseOrder = 11, -- Ultimate seed
		farmingData = {
			growTime = 3000,
			yieldAmount = 1,
			resultCropId = "glorious_sunflower",
			stages = {"planted", "sprouting", "growing", "flowering", "glorious"},
			rarityChances = {common = 0.0, uncommon = 0.9, rare = 0.08, epic = 0.01999, legendary = 0.00001},
			alwaysHighRarity = true
		}
	},

	-- Mutation crops (not purchasable)
	broccarrot = {
		id = "broccarrot",
		name = "üß¨ Broccarrot",
		description = "A rare mutation crop - cannot be purchased, only created through genetic fusion",
		price = 999999, -- Extremely high price to discourage purchase
		currency = "farmTokens",
		category = "mutation",
		icon = "ü•¶ü•ï",
		purchasable = false, -- Cannot be bought
		sellable = true,
		sellPrice = 150,
		rarity = "uncommon"
	},

	broctato = {
		id = "broctato",
		name = "üß¨ Broctato", 
		description = "An epic mutation crop - cannot be purchased, only created through genetic fusion",
		price = 999999,
		currency = "farmTokens",
		category = "mutation",
		icon = "ü•¶ü•î",
		purchasable = false,
		sellable = true,
		sellPrice = 200,
		rarity = "uncommon"
	},
	craddish = {
		id = "craddish",
		name = "üß¨ Craddish",
		description = "An uncommon mutation crop - cannot be purchased, only created through genetic fusion",
		price = 999999,
		currency = "farmTokens", 
		category = "mutation",
		icon = "ü•ïüå∂Ô∏è",
		purchasable = false,
		sellable = true,
		sellPrice = 250,
		rarity = "uncommon"
	},
	brocmato = {
		id = "brocmato", 
		name = "üß¨ Brocmato",
		description = "A rare mutation crop - cannot be purchased, only created through genetic fusion",
		price = 999999,
		currency = "farmTokens",
		category = "mutation", 
		icon = "ü•¶üçÖ",
		purchasable = false,
		sellable = true,
		sellPrice = 250,
		rarity = "rare"
	},

	cornmato = {
		id = "cornmato",
		name = "üß¨ Cornmato",
		description = "An epic mutation crop - cannot be purchased, only created through genetic fusion", 
		price = 999999,
		currency = "farmTokens",
		category = "mutation",
		icon = "üåΩüçÖ",
		purchasable = false,
		sellable = true,
		sellPrice = 300,
		rarity = "epic"
	},


	-- ========== FARM CATEGORY (Core Infrastructure) ==========

	-- UNCHANGED: Garden remains at 100 coins
	farm_plot_starter = {
		id = "farm_plot_starter",
		name = "üåæ Your Garden Plot",
		description = "üéØ ESSENTIAL PURCHASE! Start your farming journey!\n\nüéÅ Get a complete 10x10 farming grid:\n‚Ä¢ 100 planting spots (all unlocked!)\n‚Ä¢ FREE starter package:\n  - 5x Carrot Seeds\n  - 3x Potato Seeds\n‚Ä¢ Access to entire farming system\n\nüåæ This unlocks everything - buy this first!\n\nüí∞ Only 100 coins!",
		price = 100, -- PROGRESSION: 100 coins (unchanged)
		currency = "coins",
		category = "farm",
		icon = "üåæ",
		maxQuantity = 1,
		type = "farmPlot",
		purchaseOrder = 1, -- FIRST farm purchase
		effects = {
			enableFarming = true,
			starterSeeds = {
				carrot_seeds = 5,
				potato_seeds = 3
			}
		}
	},

	-- NEW: Wheat Field Access at 10,000 coins
	wheat_field_access = {
		id = "wheat_field_access",
		name = "üåæ Wheat Field Access",
		description = "üèÜ UNLOCK ADVANCED FARMING! üèÜ\nGain access to the wheat field and advanced farming techniques!\n\nüåæ Wheat Field Benefits:\n‚Ä¢ Unlock wheat seeds for planting\n‚Ä¢ Access to scythe tool for harvesting\n‚Ä¢ Higher profit margins with wheat crops\n‚Ä¢ Large-scale farming operations\n‚Ä¢ Bulk harvesting capabilities\n\nüí∞ Major farming expansion!\n\n‚ö†Ô∏è Requires significant investment: 10,000 coins",
		price = 10000, -- PROGRESSION: 10,000 coins
		currency = "coins",
		category = "farm",
		icon = "üåæ",
		maxQuantity = 1,
		type = "access",
		purchaseOrder = 2, -- Second major progression step
		effects = {
			enableWheatFarming = true,
			unlockWheatSeeds = true,
			unlockScythe = true
		}
	},

	-- UPDATED: Scythe now requires wheat field access
	scythe_tool = {
		id = "scythe_tool",
		name = "üî™ Scythe",
		description = "üåæ WHEAT CUTTING TOOL üåæ\nPowerful tool for harvesting wheat efficiently!\n\n‚ö° Features:\n‚Ä¢ Cut wheat in large areas\n‚Ä¢ Durable construction\n‚Ä¢ Fast harvesting\n‚Ä¢ Professional grade\n\nüî™ Essential for wheat farming!\n\n‚ö†Ô∏è Requires Wheat Field Access",
		price = 500,
		currency = "coins",
		category = "farm",
		icon = "üî™",
		maxQuantity = 1,
		type = "tool",
		purchaseOrder = 15, -- Advanced farming tool
		requiresPurchase = "wheat_field_access", -- NEW: Requires wheat field
		toolData = {
			durability = 100,
			toolType = "scythe",
			cuttingRadius = 8,
			efficiency = 1.5
		}
	},

	milk_efficiency_1 = {
		id = "milk_efficiency_1",
		name = "ü•õ Enhanced Milking I",
		description = "Improve your milking efficiency and output!\n\nüêÑ Benefits:\n‚Ä¢ Reduced cooldown\n‚Ä¢ Enhanced milk production\n‚Ä¢ Better cow happiness\n‚Ä¢ Tier 1 upgrade\n\nü•õ Work smarter, not harder!",
		price = 100,
		currency = "coins",
		category = "farm",
		icon = "ü•õ",
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 4 -- First efficiency upgrade
	},

	milk_efficiency_2 = {
		id = "milk_efficiency_2",
		name = "ü•õ Enhanced Milking II",
		description = "Further improve your milking operation!\n\nüêÑ Enhanced Benefits:\n‚Ä¢ Even better cooldown\n‚Ä¢ More milk per collection\n‚Ä¢ Premium cow care techniques\n‚Ä¢ Tier 2 upgrade\n\nü•õ Professional dairy management!",
		price = 250,
		currency = "coins",
		category = "farm",
		icon = "ü•õ",
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 5 -- Second efficiency upgrade
	},

	milk_efficiency_3 = {
		id = "milk_efficiency_3",
		name = "ü•õ Enhanced Milking III",
		description = "Maximum milking efficiency achieved!\n\nüêÑ Maximum Benefits:\n‚Ä¢ Best cooldown reduction\n‚Ä¢ Maximum milk per collection\n‚Ä¢ Expert cow management\n‚Ä¢ Tier 3 upgrade\n\nü•õ Peak performance achieved!",
		price = 500,
		currency = "coins",
		category = "farm",
		icon = "ü•õ",
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 6 -- Final efficiency upgrade
	},

	milk_value_boost = {
		id = "milk_value_boost",
		name = "üí∞ Premium Milk Quality",
		description = "Increase the quality and market value of your milk!\n\nüí∞ Value Enhancement:\n‚Ä¢ Better sell price per milk\n‚Ä¢ Premium quality certification\n‚Ä¢ Better market reputation\n‚Ä¢ Permanent upgrade\n\nüí∞ Quality pays!",
		price = 300,
		currency = "coins",
		category = "farm",
		icon = "üí∞",
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 7 -- Value enhancement
	},

	silver_cow_upgrade = {
		id = "silver_cow_upgrade",
		name = "ü•à Silver Cow Upgrade",
		description = "Upgrade a basic cow to Silver tier!\n\nü•õ Silver Tier Benefits:\n‚Ä¢ Better milk production\n‚Ä¢ Beautiful metallic shine\n‚Ä¢ Improved efficiency\n‚Ä¢ Upgrades one existing cow\n\nü•à First tier advancement!",
		price = 10000,
		currency = "coins",
		category = "farm",
		icon = "ü•à",
		maxQuantity = 1,
		type = "cow_upgrade",
		purchaseOrder = 8, -- First upgrade tier
		cowData = {
			tier = "silver",
			milkAmount = 2,
			cooldown = 30,
			visualEffects = {"metallic_shine", "silver_particles"},
			upgradeFrom = "basic"
		}
	},

	gold_cow_upgrade = {
		id = "gold_cow_upgrade",
		name = "ü•á Gold Cow Upgrade",
		description = "Upgrade a silver cow to Gold tier!\n\nü•õ Gold Tier Benefits:\n‚Ä¢ Excellent milk production\n‚Ä¢ Brilliant golden glow effect\n‚Ä¢ Premium tier efficiency\n‚Ä¢ Prestigious appearance\n\nü•á Elite cow status!",
		price = 25000,
		currency = "coins",
		category = "farm",
		icon = "ü•á",
		maxQuantity = 1,
		type = "cow_upgrade",
		purchaseOrder = 9, -- Second upgrade tier
		cowData = {
			tier = "gold",
			milkAmount = 3,
			cooldown = 60,
			visualEffects = {"golden_glow", "gold_sparkles", "light_aura"},
			upgradeFrom = "silver"
		}
	},

	diamond_cow_upgrade = {
		id = "diamond_cow_upgrade", 
		name = "üíé Diamond Cow Upgrade",
		description = "Upgrade a gold cow to Diamond tier!\n\nü•õ Diamond Tier Benefits:\n‚Ä¢ Superior milk production\n‚Ä¢ Crystalline beauty with rainbow effects\n‚Ä¢ Exceptional production efficiency\n‚Ä¢ Absolutely stunning appearance\n\nüíé Luxury farming at its finest!",
		price = 500000,
		currency = "coins",
		category = "farm",
		icon = "üíé",
		maxQuantity = 1,
		type = "cow_upgrade",
		purchaseOrder = 10, -- Third upgrade tier
		cowData = {
			tier = "diamond",
			milkAmount = 5,
			cooldown = 60,
			visualEffects = {"diamond_crystals", "rainbow_sparkles", "prismatic_aura"},
			upgradeFrom = "gold"
		}
	},

	rainbow_cow_upgrade = {
		id = "rainbow_cow_upgrade",
		name = "üåà Rainbow Cow Upgrade", 
		description = "üèÜ PREMIUM FARM TOKEN UPGRADE üèÜ\nTransform a diamond cow into magical Rainbow tier!\n\nü•õ Rainbow Tier Benefits:\n‚Ä¢ Amazing milk production\n‚Ä¢ Shifting rainbow colors\n‚Ä¢ Magical aura effects\n‚Ä¢ Premium tier status\n\nüåà Magic meets dairy farming!",
		price = 100,
		currency = "farmTokens",
		category = "farm",
		icon = "üåà",
		maxQuantity = 1,
		type = "cow_upgrade",
		purchaseOrder = 11, -- Premium upgrade
		cowData = {
			tier = "rainbow",
			milkAmount = 10,
			cooldown = 120,
			visualEffects = {"rainbow_cycle", "magical_aura", "color_trails", "star_particles"},
			upgradeFrom = "diamond"
		}
	},

	cosmic_cow_upgrade = {
		id = "cosmic_cow_upgrade",
		name = "üåå Cosmic Cow Upgrade",
		description = "üèÜ ULTIMATE PREMIUM UPGRADE üèÜ\nThe pinnacle of cow evolution!\n\nü•õ Cosmic Tier Benefits:\n‚Ä¢ Maximum milk production\n‚Ä¢ Galaxy effects and cosmic energy\n‚Ä¢ Ultimate production efficiency\n‚Ä¢ Legendary status\n\nüåå Transcend normal farming!",
		price = 750,
		currency = "farmTokens",
		category = "farm",
		icon = "üåå",
		maxQuantity = 1,
		type = "cow_upgrade",
		purchaseOrder = 12, -- Ultimate upgrade
		cowData = {
			tier = "cosmic",
			milkAmount = 25,
			cooldown = 5,
			visualEffects = {"galaxy_swirl", "cosmic_energy", "star_field", "nebula_clouds", "space_distortion"},
			upgradeFrom = "rainbow"
		}
	},

	-- ========== MINING CATEGORY ==========

	-- UPDATED: Cave access price increased to 250,000 coins
	cave_access_pass = {
		id = "cave_access_pass",
		name = "üï≥Ô∏è Cave Access Pass",
		description = "üèÜ UNLOCK MINING EMPIRE! üèÜ\nGrants access to Cave 1 (Copper Mine) and the entire mining system!\n\nüóª Mining Access Includes:\n‚Ä¢ Cave 1: Copper Mine\n‚Ä¢ Copper and bronze ore deposits\n‚Ä¢ Mining tutorial area\n‚Ä¢ New major income source\n‚Ä¢ Path to advanced mining tools\n\nüï≥Ô∏è Diversify your empire with mining!\n\nüí∞ Major investment required: 250,000 coins\n‚ö†Ô∏è This is a significant milestone - save up!",
		price = 250000, -- PROGRESSION: 250,000 coins (increased from 50,000)
		currency = "coins",
		category = "mining",
		icon = "üï≥Ô∏è",
		maxQuantity = 1,
		type = "access",
		purchaseOrder = 1 -- Mining access (third major milestone)
	},

	-- All mining tools now require cave access
	wooden_pickaxe = {
		id = "wooden_pickaxe",
		name = "ü™ì Wooden Pickaxe",
		description = "Basic wooden pickaxe for absolute beginners!\n\n‚õèÔ∏è Basic Mining:\n‚Ä¢ Can mine copper ore only\n‚Ä¢ 50 durability\n‚Ä¢ Very basic tool\n‚Ä¢ Cheapest mining option\n\nü™ì Start your mining journey!\n\n‚ö†Ô∏è Requires Cave Access Pass",
		price = 5000,
		currency = "coins",
		category = "mining",
		icon = "ü™ì",
		maxQuantity = 1,
		type = "tool",
		purchaseOrder = 2, -- Beginner tool
		requiresPurchase = "cave_access_pass" -- Requires cave access
	},

	basic_pickaxe = {
		id = "basic_pickaxe",
		name = "‚õèÔ∏è Basic Pickaxe",
		description = "Essential mining tool for resource gathering!\n\n‚õèÔ∏è Mining Power:\n‚Ä¢ Can mine copper and bronze ore\n‚Ä¢ 100 durability\n‚Ä¢ Entry-level mining tool\n‚Ä¢ Opens mining gameplay\n\n‚õèÔ∏è Start digging for treasure!\n\n‚ö†Ô∏è Requires Cave Access Pass",
		price = 10000,
		currency = "coins",
		category = "mining",
		icon = "‚õèÔ∏è",
		maxQuantity = 1,
		type = "tool",
		purchaseOrder = 3, -- First proper mining tool
		requiresPurchase = "cave_access_pass" -- Requires cave access
	},

	stone_pickaxe = {
		id = "stone_pickaxe",
		name = "ü™® Stone Pickaxe",
		description = "Improved mining tool with better capabilities!\n\n‚õèÔ∏è Enhanced Power:\n‚Ä¢ Can mine up to silver ore\n‚Ä¢ 150 durability\n‚Ä¢ Faster mining speed\n‚Ä¢ Sturdy construction\n\nü™® Upgrade your mining game!\n\n‚ö†Ô∏è Requires Cave Access Pass",
		price = 15000,
		currency = "coins",
		category = "mining",
		icon = "ü™®",
		maxQuantity = 1,
		type = "tool",
		purchaseOrder = 4, -- Pickaxe upgrade
		requiresPurchase = "cave_access_pass" -- Requires cave access
	},

	iron_pickaxe = {
		id = "iron_pickaxe",
		name = "‚öíÔ∏è Iron Pickaxe",
		description = "Professional mining tool for serious miners!\n\n‚õèÔ∏è Professional Grade:\n‚Ä¢ Can mine up to gold ore\n‚Ä¢ 250 durability\n‚Ä¢ Much faster mining speed\n‚Ä¢ Professional quality\n\n‚öíÔ∏è Professional mining power!\n\n‚ö†Ô∏è Requires Cave Access Pass",
		price = 20000,
		currency = "coins",
		category = "mining",
		icon = "‚öíÔ∏è",
		maxQuantity = 1,
		type = "tool",
		purchaseOrder = 5, -- Advanced tool
		requiresPurchase = "cave_access_pass" -- Requires cave access
	},

	diamond_pickaxe = {
		id = "diamond_pickaxe",
		name = "üíé Diamond Pickaxe",
		description = "Premium mining tool for the most valuable ores!\n\n‚õèÔ∏è Premium Power:\n‚Ä¢ Can mine up to platinum ore\n‚Ä¢ 500 durability\n‚Ä¢ Very fast mining speed\n‚Ä¢ Premium quality construction\n\nüíé Elite mining equipment!\n\n‚ö†Ô∏è Requires Cave Access Pass",
		price = 25000,
		currency = "coins",
		category = "mining",
		icon = "üíé",
		maxQuantity = 1,
		type = "tool",
		purchaseOrder = 6, -- Premium tool
		requiresPurchase = "cave_access_pass" -- Requires cave access
	},

	obsidian_pickaxe = {
		id = "obsidian_pickaxe",
		name = "‚¨õ Obsidian Pickaxe",
		description = "üèÜ LEGENDARY MINING TOOL üèÜ\nCan mine the rarest ores including mystical obsidian!\n\n‚õèÔ∏è Legendary Power:\n‚Ä¢ Can mine ALL ore types\n‚Ä¢ 1000 durability\n‚Ä¢ Extremely fast mining speed\n‚Ä¢ Legendary quality\n\n‚¨õ The ultimate mining tool!\n\n‚ö†Ô∏è Requires Cave Access Pass",
		price = 50000,
		currency = "farmTokens",
		category = "mining",
		icon = "‚¨õ",
		maxQuantity = 1,
		type = "tool",
		purchaseOrder = 7, -- Ultimate tool
		requiresPurchase = "cave_access_pass" -- Requires cave access
	},

	-- ========== CRAFTING CATEGORY ==========

	basic_workbench = {
		id = "basic_workbench",
		name = "üî® Basic Workbench",
		description = "üéØ UNLOCK CRAFTING! Essential crafting station!\n\nüî® Crafting Options:\n‚Ä¢ Basic tools and equipment\n‚Ä¢ Simple wooden items\n‚Ä¢ Entry-level recipes\n‚Ä¢ New gameplay dimension\n\nüî® Create your own tools!",
		price = 50000,
		currency = "coins",
		category = "crafting",
		icon = "üî®",
		maxQuantity = 1,
		type = "building",
		purchaseOrder = 1 -- Crafting access
	},

	forge = {
		id = "forge",
		name = "üî• Advanced Forge",
		description = "Advanced metalworking station for powerful items!\n\nüî• Advanced Crafting:\n‚Ä¢ Metal tools and weapons\n‚Ä¢ Advanced equipment\n‚Ä¢ Ore processing capabilities\n‚Ä¢ Professional recipes\n\nüî• Master metalworking!",
		price = 100000,
		currency = "coins",
		category = "crafting",
		icon = "üî•",
		maxQuantity = 1,
		type = "building",
		purchaseOrder = 2 -- Advanced crafting
	},

	mystical_altar = {
		id = "mystical_altar",
		name = "üîÆ Mystical Altar",
		description = "üèÜ LEGENDARY CRAFTING STATION üèÜ\nCraft the most powerful and mystical items!\n\nüîÆ Mystical Powers:\n‚Ä¢ Legendary item creation\n‚Ä¢ Mystical equipment\n‚Ä¢ Magical enhancements\n‚Ä¢ Ultimate recipes\n\nüîÆ Transcend normal crafting!",
		price = 500000,
		currency = "farmTokens",
		category = "crafting",
		icon = "üîÆ",
		maxQuantity = 1,
		type = "building",
		purchaseOrder = 3 -- Ultimate crafting
	},

	-- ========== PREMIUM CATEGORY ==========

	rarity_booster = {
		id = "rarity_booster",
		name = "‚ú® Rarity Booster",
		description = "üèÜ PREMIUM ENHANCEMENT üèÜ\nGuarantee better crop quality!\n\n‚ú® Rarity Benefits:\n‚Ä¢ Guarantees at least Rare quality\n‚Ä¢ Works for next 3 harvests\n‚Ä¢ Massive value increase\n‚Ä¢ Premium enhancement\n\n‚ú® Quality over quantity!",
		price = 99,
		currency = "farmTokens",
		category = "premium",
		icon = "‚ú®",
		maxQuantity = 5,
		type = "enhancement",
		purchaseOrder = 1 -- First premium item
	},

	auto_harvester = {
		id = "auto_harvester",
		name = "ü§ñ Auto Harvester",
		description = "üèÜ ULTIMATE FARMING AUTOMATION üèÜ\nNever manually harvest again!\n\nü§ñ Automation Features:\n‚Ä¢ Harvests all ready crops\n‚Ä¢ Works automatically\n‚Ä¢ Regular intervals\n‚Ä¢ No manual work needed\n\nü§ñ The ultimate upgrade!",
		price = 300,
		currency = "farmTokens",
		category = "premium",
		icon = "ü§ñ",
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 2 -- Ultimate automation
	},
}

-- ========== EXISTING FUNCTIONS (unchanged) ==========

function ItemConfig.GetCropRarity(seedId, playerBoosters)
	playerBoosters = playerBoosters or {}

	local seedData = ItemConfig.ShopItems[seedId]
	if not seedData or not seedData.farmingData or not seedData.farmingData.rarityChances then
		return "common"
	end

	local chances = seedData.farmingData.rarityChances
	local roll = math.random()

	-- Apply rarity booster if active
	if playerBoosters.rarity_booster then
		return "rare" -- Guaranteed rare or better
	end

	-- Check for always high rarity seeds
	if seedData.farmingData.alwaysHighRarity then
		if roll < chances.legendary then return "legendary"
		elseif roll < chances.legendary + chances.epic then return "epic"
		elseif roll < chances.legendary + chances.epic + chances.rare then return "rare"
		else return "rare" -- Minimum rare for special seeds
		end
	end

	-- Normal rarity roll
	if roll < chances.legendary then return "legendary"
	elseif roll < chances.legendary + chances.epic then return "epic"
	elseif roll < chances.legendary + chances.epic + chances.rare then return "rare"
	elseif roll < chances.legendary + chances.epic + chances.rare + chances.uncommon then return "uncommon"
	else return "common"
	end
end

function ItemConfig.ApplyRarityToValue(baseValue, rarity)
	local rarityData = ItemConfig.RaritySystem[rarity]
	if rarityData then
		return math.floor(baseValue * rarityData.valueMultiplier)
	end
	return baseValue
end

function ItemConfig.GetRarityColor(rarity)
	local rarityData = ItemConfig.RaritySystem[rarity]
	return rarityData and rarityData.color or Color3.fromRGB(255, 255, 255)
end

function ItemConfig.GetRaritySize(rarity)
	local rarityData = ItemConfig.RaritySystem[rarity]
	return rarityData and rarityData.sizeMultiplier or 1.0
end

function ItemConfig.GetSeedData(seedId)
	local seed = ItemConfig.ShopItems[seedId]
	if seed and seed.type == "seed" and seed.farmingData then
		return seed.farmingData
	end
	return nil
end

function ItemConfig.GetCropData(cropId)
	return ItemConfig.Crops[cropId]
end

function ItemConfig.GetSeedForCrop(cropId)
	-- Find the seed that produces this crop
	for seedId, seedData in pairs(ItemConfig.ShopItems) do
		if seedData.type == "seed" and seedData.farmingData and seedData.farmingData.resultCropId == cropId then
			return seedId
		end
	end
	return nil
end

function ItemConfig.GetOreData(oreId)
	return ItemConfig.MiningSystem.ores[oreId]
end

function ItemConfig.GetToolData(toolId)
	return ItemConfig.MiningSystem.tools[toolId]
end

function ItemConfig.CanToolMineOre(toolId, oreId)
	local toolData = ItemConfig.MiningSystem.tools[toolId]
	if not toolData or not toolData.canMine then
		return false
	end

	for _, mineable in ipairs(toolData.canMine) do
		if mineable == oreId then
			return true
		end
	end
	return false
end

function ItemConfig.IsItemSellable(itemId)
	-- Define which items can be sold
	local sellableTypes = {
		"crop", "material", "ore"
	}

	-- Check if it's a crop
	if ItemConfig.Crops[itemId] then
		return true
	end

	-- Check if it's milk or other sellable items
	local sellableItems = {
		"milk", "fresh_milk", "Broccoli", "Cabbage", "Carrot", "Corn", "Potato", "Radish", "Strawberry", "Tomato", "Wheat", "Broccarrot", "Broctato", "Craddish", "Brocmato", "Cornmato",
		"copper_ore", "bronze_ore", "silver_ore", "gold_ore", "platinum_ore", "obsidian_ore"
	}

	for _, sellableItem in ipairs(sellableItems) do
		if itemId == sellableItem then
			return true
		end
	end

	return false
end

function ItemConfig.GetItemSellPrice(itemId)
	-- Crop sell prices
	local cropData = ItemConfig.Crops[itemId]
	if cropData and cropData.sellValue then
		return cropData.sellValue
	end

	-- Other item sell prices
	local sellPrices = {
		-- Animal products
		milk = 2,

		-- Ores
		copper_ore = 30,
		bronze_ore = 45,
		silver_ore = 80,
		gold_ore = 150,
		platinum_ore = 300,
		obsidian_ore = 100, -- Sells for farmTokens

		-- Materials
		wood = 10,
		stone = 5
	}

	return sellPrices[itemId] or 0
end

function ItemConfig.ValidateShopItem(itemId)
	local item = ItemConfig.ShopItems[itemId]
	if not item then return false, "Item not found" end

	local required = {"name", "price", "currency", "category", "description", "icon"}
	for _, prop in ipairs(required) do
		if not item[prop] then
			return false, "Missing property: " .. prop
		end
	end

	return true, "Valid item"
end

function ItemConfig.GetAllShopItems()
	return ItemConfig.ShopItems
end

function ItemConfig.GetItemsByCategory(category)
	local items = {}
	for itemId, item in pairs(ItemConfig.ShopItems) do
		if item.category == category then
			items[itemId] = item
		end
	end
	return items
end

function ItemConfig.CountItemsByCategory()
	local counts = {}
	for itemId, item in pairs(ItemConfig.ShopItems) do
		local category = item.category or "unknown"
		counts[category] = (counts[category] or 0) + 1
	end
	return counts
end

function ItemConfig.CountOresByCategory()
	local count = 0
	for _ in pairs(ItemConfig.MiningSystem.ores) do
		count = count + 1
	end
	return count
end

function ItemConfig.CountToolsByCategory()
	local count = 0
	for _ in pairs(ItemConfig.MiningSystem.tools) do
		count = count + 1
	end
	return count
end

-- ========== [Keep all other existing functions unchanged] ==========

print("‚úÖ PROGRESSION SYSTEM UPDATED!")
print("üéØ NEW PROGRESSION STRUCTURE:")
print("  1Ô∏è‚É£ Start: Milk cow (free) ‚Üí sell milk for coins")
print("  2Ô∏è‚É£ Garden: 100 coins (unchanged)")
print("  3Ô∏è‚É£ Wheat Field: 10,000 coins (NEW)")
print("  4Ô∏è‚É£ Cave Access: 250,000 coins (increased from 50,000)")
print("")
print("üîß CHANGES MADE:")
print("  ‚úÖ Added wheat_field_access item (10,000 coins)")
print("  ‚úÖ Wheat seeds now require wheat field access")
print("  ‚úÖ Scythe tool now requires wheat field access")
print("  ‚úÖ Cave access increased to 250,000 coins")
print("  ‚úÖ All mining tools now require cave access")
print("  ‚úÖ Updated descriptions to reflect progression")

return ItemConfig