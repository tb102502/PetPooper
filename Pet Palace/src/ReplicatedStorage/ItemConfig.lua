--[[
    REORDERED ItemConfig.lua - Logical Purchase Progression
    Place in: ReplicatedStorage/ItemConfig.lua
    
    IMPROVEMENTS:
    ‚úÖ Added purchaseOrder to all shop items for logical progression
    ‚úÖ Seeds ordered from beginner (carrot) to premium (golden)
    ‚úÖ Farm items properly sequenced (starter plot first)
    ‚úÖ Defense items in threat-response order
    ‚úÖ All systems follow natural learning progression
    ‚úÖ Premium items appropriately placed at end
]]

local ItemConfig = {}

-- ========== RARITY SYSTEM ==========
ItemConfig.RaritySystem = {
	common    = { name = "Common",    color = Color3.fromRGB(255,255,255), sizeMultiplier = 1.0, valueMultiplier = 1.0, dropChance = 0.5, effects = {}, tier = 1 },
	uncommon  = { name = "Uncommon",  color = Color3.fromRGB(0,255,0),   sizeMultiplier = 1.1, valueMultiplier = 1.2, dropChance = 0.25, effects = {"sparkle"}, tier = 2 },
	rare      = { name = "Rare",      color = Color3.fromRGB(255,215,0), sizeMultiplier = 1.2, valueMultiplier = 1.5, dropChance = 0.07, effects = {"golden_shine"}, tier = 3 },
	epic      = { name = "Epic",      color = Color3.fromRGB(128,0,128), sizeMultiplier = 1.8, valueMultiplier = 2.0, dropChance = 0.025, effects = {"purple_aura"}, tier = 4 },
	legendary = { name = "Legendary", color = Color3.fromRGB(255,100,100), sizeMultiplier = 2.0, valueMultiplier = 3.0, dropChance = 0.005, effects = {"legendary_glow"}, tier = 5 },
}

-- ========== MINING SYSTEM DATA ==========
ItemConfig.MiningSystem = {}

-- Mining Ores
ItemConfig.MiningSystem.ores = {
	copper_ore = {
		id = "copper_ore",
		name = "Copper Ore",
		description = "Basic copper ore found in shallow caves.",
		color = Color3.fromRGB(184, 115, 51),
		hardness = 3,
		sellValue = 25,
		sellCurrency = "coins",
		xpReward = 15,
		respawnTime = 60, -- 1 minute
		requiredLevel = 1,
		rarity = "common",
		icon = "üü§"
	},

	bronze_ore = {
		id = "bronze_ore", 
		name = "Bronze Ore",
		description = "Stronger bronze ore with metallic properties.",
		color = Color3.fromRGB(139, 90, 43),
		hardness = 4,
		sellValue = 40,
		sellCurrency = "coins",
		xpReward = 25,
		respawnTime = 90, -- 1.5 minutes
		requiredLevel = 2,
		rarity = "common",
		icon = "üü´"
	},

	silver_ore = {
		id = "silver_ore",
		name = "Silver Ore", 
		description = "Precious silver ore with high value.",
		color = Color3.fromRGB(192, 192, 192),
		hardness = 6,
		sellValue = 75,
		sellCurrency = "coins",
		xpReward = 40,
		respawnTime = 120, -- 2 minutes
		requiredLevel = 3,
		rarity = "uncommon",
		icon = "‚ö™"
	},

	gold_ore = {
		id = "gold_ore",
		name = "Gold Ore",
		description = "Valuable gold ore found in deep caverns.",
		color = Color3.fromRGB(255, 215, 0),
		hardness = 8,
		sellValue = 150,
		sellCurrency = "coins", 
		xpReward = 60,
		respawnTime = 180, -- 3 minutes
		requiredLevel = 5,
		rarity = "rare",
		icon = "üü°"
	},

	platinum_ore = {
		id = "platinum_ore",
		name = "Platinum Ore",
		description = "Extremely rare platinum ore with exceptional value.",
		color = Color3.fromRGB(132, 135, 137),
		hardness = 12,
		sellValue = 300,
		sellCurrency = "coins",
		xpReward = 100,
		respawnTime = 300, -- 5 minutes
		requiredLevel = 7,
		rarity = "epic",
		icon = "‚ö´"
	},

	obsidian_ore = {
		id = "obsidian_ore",
		name = "Obsidian Ore",
		description = "Mystical obsidian ore from the deepest caves.",
		color = Color3.fromRGB(28, 28, 28),
		hardness = 15,
		sellValue = 100,
		sellCurrency = "farmTokens",
		xpReward = 150,
		respawnTime = 450, -- 7.5 minutes
		requiredLevel = 10,
		rarity = "legendary",
		icon = "‚¨õ"
	}
}

-- Mining Tools
ItemConfig.MiningSystem.tools = {
	wooden_pickaxe = {
		id = "wooden_pickaxe",
		name = "Wooden Pickaxe",
		description = "Basic wooden pickaxe for beginners.",
		speed = 1.0,
		durability = 50,
		canMine = {"copper_ore"},
		requiredLevel = 1,
		icon = "ü™ì"
	},

	basic_pickaxe = {
		id = "basic_pickaxe", 
		name = "Basic Pickaxe",
		description = "Essential tool for mining copper and bronze.",
		speed = 1.2,
		durability = 100,
		canMine = {"copper_ore", "bronze_ore"},
		requiredLevel = 1,
		icon = "‚õèÔ∏è"
	},

	stone_pickaxe = {
		id = "stone_pickaxe",
		name = "Stone Pickaxe", 
		description = "Improved pickaxe for mining harder ores.",
		speed = 1.5,
		durability = 150,
		canMine = {"copper_ore", "bronze_ore", "silver_ore"},
		requiredLevel = 2,
		icon = "ü™®"
	},

	iron_pickaxe = {
		id = "iron_pickaxe",
		name = "Iron Pickaxe",
		description = "Professional grade pickaxe for serious miners.",
		speed = 2.0,
		durability = 250,
		canMine = {"copper_ore", "bronze_ore", "silver_ore", "gold_ore"},
		requiredLevel = 4,
		icon = "‚öíÔ∏è"
	},

	diamond_pickaxe = {
		id = "diamond_pickaxe",
		name = "Diamond Pickaxe",
		description = "Premium pickaxe for the most valuable ores.",
		speed = 3.0,
		durability = 500,
		canMine = {"copper_ore", "bronze_ore", "silver_ore", "gold_ore", "platinum_ore"},
		requiredLevel = 6,
		icon = "üíé"
	},

	obsidian_pickaxe = {
		id = "obsidian_pickaxe",
		name = "Obsidian Pickaxe",
		description = "Legendary pickaxe capable of mining anything.",
		speed = 4.0,
		durability = 1000,
		canMine = {"copper_ore", "bronze_ore", "silver_ore", "gold_ore", "platinum_ore", "obsidian_ore"},
		requiredLevel = 8,
		icon = "‚¨õ"
	}
}

-- ========== CROP DATA ==========
ItemConfig.Crops = {
	carrot = { 
		id = "carrot", name = "ü•ï Carrot", type = "crop", category = "crops", 
		description = "Fresh orange carrot.", sellValue = 8, sellCurrency = "coins", 
		feedValue = 1, cropPoints = 1, icon = "ü•ï", rarity = "common" 
	},
	corn = { 
		id = "corn", name = "üåΩ Corn", type = "crop", category = "crops", 
		description = "Sweet yellow corn.", sellValue = 725, sellCurrency = "coins", 
		feedValue = 3, cropPoints = 3, icon = "üåΩ", rarity = "uncommon" 
	},
	strawberry = { 
		id = "strawberry", name = "üçì Strawberry", type = "crop", category = "crops", 
		description = "Sweet red strawberry.", sellValue = 350, sellCurrency = "coins", 
		feedValue = 2, cropPoints = 2, icon = "üçì", rarity = "uncommon" 
	},
	golden_fruit = { 
		id = "golden_fruit", name = "‚ú® Golden Fruit", type = "crop", category = "crops", 
		description = "Magical golden fruit.", sellValue = 0, sellCurrency = "coins", 
		feedValue = 10, cropPoints = 10, icon = "‚ú®", rarity = "legendary" 
	},
	wheat = { 
		id = "wheat", name = "üåæ Wheat", type = "crop", category = "crops", 
		description = "Golden wheat grain.", sellValue = 600, sellCurrency = "coins", 
		feedValue = 3, cropPoints = 3, icon = "üåæ", rarity = "uncommon" 
	},
	potato = { 
		id = "potato", name = "ü•î Potato", type = "crop", category = "crops", 
		description = "Hearty potato.", sellValue = 40, sellCurrency = "coins", 
		feedValue = 2, cropPoints = 2, icon = "ü•î", rarity = "common" 
	},
	tomato = { 
		id = "tomato", name = "üçÖ Tomato", type = "crop", category = "crops", 
		description = "Juicy red tomato.", sellValue = 675, sellCurrency = "coins", 
		feedValue = 3, cropPoints = 3, icon = "üçÖ", rarity = "uncommon" 
	},
	cabbage = { 
		id = "cabbage", name = "ü•¨ Cabbage", type = "crop", category = "crops", 
		description = "Fresh leafy cabbage.", sellValue = 75, sellCurrency = "coins", 
		feedValue = 1, cropPoints = 1, icon = "ü•¨", rarity = "common" 
	},
	radish = { 
		id = "radish", name = "üå∂Ô∏è Radish", type = "crop", category = "crops", 
		description = "Spicy radish.", sellValue = 140, sellCurrency = "coins", 
		feedValue = 2, cropPoints = 2, icon = "üå∂Ô∏è", rarity = "common" 
	},
	broccoli = { 
		id = "broccoli", name = "ü•¶ Broccoli", type = "crop", category = "crops", 
		description = "Nutritious green broccoli.", sellValue = 110, sellCurrency = "coins", 
		feedValue = 2, cropPoints = 2, icon = "ü•¶", rarity = "common" 
	},
	glorious_sunflower = { 
		id = "glorious_sunflower", name = "üåª Glorious Sunflower", type = "crop", category = "crops", 
		description = "üèÜ LEGENDARY PREMIUM CROP üèÜ", sellValue = 0, sellCurrency = "farmTokens", 
		feedValue = 0, cropPoints = 0, icon = "üåª", rarity = "divine" 
	}
}

-- ========== REORDERED SHOP ITEMS WITH PURCHASE ORDER ==========
ItemConfig.ShopItems = {

	-- ========== SEEDS CATEGORY (Beginner to Advanced) ==========

	carrot_seeds = {
		id = "carrot_seeds",
		name = "ü•ï Carrot Seeds",
		description = "Perfect starter crop! Fast-growing and profitable.\n\n‚è±Ô∏è Grow Time: 10 seconds\nüí∞ Sell Value: 8 coins each\nüê∑ Pig Value: 1 crop point\n\nüéØ BEGINNER FRIENDLY - Start here!",
		price = 5,
		currency = "coins",
		category = "seeds",
		icon = "ü•ï",
		maxQuantity = 50,
		type = "seed",
		purchaseOrder = 1, -- FIRST seed - perfect for beginners
		farmingData = {
			growTime = 10,
			yieldAmount = 1,
			resultCropId = "carrot",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	potato_seeds = {
		id = "potato_seeds",
		name = "ü•î Potato Seeds",
		description = "Another great starter crop! Quick growth with good value.\n\n‚è±Ô∏è Grow Time: 20 seconds\nüí∞ Sell Value: 40 coins each\nüê∑ Pig Value: 2 crop points\n\nüå± Perfect second crop to try!",
		price = 25,
		currency = "coins",
		category = "seeds",
		icon = "ü•î",
		maxQuantity = 100,
		type = "seed",
		purchaseOrder = 2, -- Second seed option
		farmingData = {
			growTime = 20, 
			yieldAmount = 1,
			resultCropId = "potato",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	cabbage_seeds = {
		id = "cabbage_seeds",
		name = "ü•¨ Cabbage Seeds",
		description = "Step up your farming! Nutritious leafy greens.\n\n‚è±Ô∏è Grow Time: 30 seconds\nüí∞ Sell Value: 75 coins each\nüê∑ Pig Value: 1 crop point\n\nü•¨ Great for learning crop timing!",
		price = 50,
		currency = "coins",
		category = "seeds",
		icon = "ü•¨",
		maxQuantity = 100,
		type = "seed",
		purchaseOrder = 3, -- Third progression step
		farmingData = {
			growTime = 30,
			yieldAmount = 1,
			resultCropId = "cabbage",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	radish_seeds = {
		id = "radish_seeds",
		name = "üå∂Ô∏è Radish Seeds",
		description = "Mid-tier crop with spicy flavor and good profits!\n\n‚è±Ô∏è Grow Time: 50 seconds\nüí∞ Sell Value: 140 coins each\nüê∑ Pig Value: 2 crop points\n\nüå∂Ô∏è Ready for intermediate farming!",
		price = 140,
		currency = "coins",
		category = "seeds",
		icon = "üå∂Ô∏è",
		maxQuantity = 100,
		type = "seed",
		purchaseOrder = 4, -- Mid-tier option
		farmingData = {
			growTime = 50,
			yieldAmount = 2,
			resultCropId = "radish",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	strawberry_seeds = {
		id = "strawberry_seeds",
		name = "üçì Strawberry Seeds",
		description = "Premium berries with excellent value! Worth the investment.\n\n‚è±Ô∏è Grow Time: 1 minute\nüí∞ Sell Value: 350 coins each\nüê∑ Pig Value: 2 crop points\n\nüçì High-value crop for experienced farmers!",
		price = 250,
		currency = "coins",
		category = "seeds",
		icon = "üçì",
		maxQuantity = 50,
		type = "seed",
		purchaseOrder = 5, -- Higher value option
		farmingData = {
			growTime = 60,
			yieldAmount = 1,
			resultCropId = "strawberry",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	wheat_seeds = {
		id = "wheat_seeds",
		name = "üåæ Wheat Seeds",
		description = "Essential grain crop for advanced farming operations.\n\n‚è±Ô∏è Grow Time: 1 minute 10 seconds\nüí∞ Sell Value: 600 coins each\nüê∑ Pig Value: 3 crop points\n\nüåæ Multiple yield crop - great efficiency!",
		price = 400,
		currency = "coins",
		category = "seeds",
		icon = "üåæ",
		maxQuantity = 100,
		type = "seed",
		purchaseOrder = 6, -- Advanced farming
		farmingData = {
			growTime = 70,
			yieldAmount = 3,
			resultCropId = "wheat",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	corn_seeds = {
		id = "corn_seeds",
		name = "üåΩ Corn Seeds",
		description = "High-value tall crop! Sweet corn that animals love.\n\n‚è±Ô∏è Grow Time: 1 minute 20 seconds\nüí∞ Sell Value: 725 coins each\nüê∑ Pig Value: 3 crop points\n\nüåΩ Premium regular crop with excellent returns!",
		price = 450,
		currency = "coins",
		category = "seeds",
		icon = "üåΩ",
		maxQuantity = 50,
		type = "seed",
		purchaseOrder = 7, -- Premium regular crop
		farmingData = {
			growTime = 80,
			yieldAmount = 1,
			resultCropId = "corn",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	tomato_seeds = {
		id = "tomato_seeds",
		name = "üçÖ Tomato Seeds",
		description = "Juicy cluster-growing tomatoes! Perfect for cooking.\n\n‚è±Ô∏è Grow Time: 1 minute 40 seconds\nüí∞ Sell Value: 675 coins each\nüê∑ Pig Value: 3 crop points\n\nüçÖ Multiple yield specialty crop!",
		price = 500,
		currency = "coins",
		category = "seeds",
		icon = "üçÖ",
		maxQuantity = 100,
		type = "seed",
		purchaseOrder = 8, -- Advanced specialty crop
		farmingData = {
			growTime = 100,
			yieldAmount = 3,
			resultCropId = "tomato",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	broccoli_seeds = {
		id = "broccoli_seeds",
		name = "ü•¶ Broccoli Seeds",
		description = "Nutritious green superfood! Takes patience but worth it.\n\n‚è±Ô∏è Grow Time: 40 seconds\nüí∞ Sell Value: 110 coins each\nüê∑ Pig Value: 4 crop points\n\nü•¶ High pig value for feeding strategies!",
		price = 75,
		currency = "coins",
		category = "seeds",
		icon = "ü•¶",
		maxQuantity = 100,
		type = "seed",
		purchaseOrder = 9, -- Advanced farming
		farmingData = {
			growTime = 40,
			yieldAmount = 1,
			resultCropId = "broccoli",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	golden_seeds = {
		id = "golden_seeds",
		name = "‚ú® Golden Seeds",
		description = "üèÜ PREMIUM FARM TOKEN CROP üèÜ\nMagical seeds that produce golden fruit!\n\n‚è±Ô∏è Grow Time: 6 minutes\nüí∞ Value: SPECIAL\nüê∑ Pig Value: 10 crop points\n\n‚ú® Premium investment for serious farmers!",
		price = 50,
		currency = "farmTokens",
		category = "seeds",
		icon = "‚ú®",
		maxQuantity = 25,
		type = "seed",
		purchaseOrder = 10, -- Premium farm token crop
		farmingData = {
			growTime = 360,
			yieldAmount = 1,
			resultCropId = "golden_fruit",
			stages = {"planted", "sprouting", "growing", "ready"},
			rarityChances = {common = 0.69, uncommon = 0.25, rare = 0.05, epic = 0.01, legendary = 0.001}
		}
	},

	glorious_sunflower_seeds = {
		id = "glorious_sunflower_seeds",
		name = "üåª Glorious Sunflower Seeds",
		description = "üèÜ ULTIMATE LEGENDARY SEED üèÜ\nThe rarest and most magnificent crop! Massive size!\n\n‚è±Ô∏è Grow Time: 8+ minutes\nüí∞ Value: PRICELESS\nüê∑ Pig Value: 25 crop points\n\nüåª THE ULTIMATE FARMING ACHIEVEMENT!",
		price = 999,
		currency = "farmTokens",
		category = "seeds",
		icon = "üåª",
		maxQuantity = 10,
		type = "seed",
		purchaseOrder = 11, -- Ultimate seed
		farmingData = {
			growTime = 3000,
			yieldAmount = 1,
			resultCropId = "glorious_sunflower",
			stages = {"planted", "sprouting", "growing", "flowering", "glorious"},
			rarityChances = {common = 0.0, uncommon = 0.9, rare = 0.08, epic = 0.01999, legendary = 0.00001},
			alwaysHighRarity = true
		}
	},

	-- ========== FARM CATEGORY (Core Infrastructure) ==========

	farm_plot_starter = {
		id = "farm_plot_starter",
		name = "üåæ Your First Farm Plot",
		description = "üéØ ESSENTIAL PURCHASE! Start your farming journey!\n\nüéÅ Includes FREE starter package:\n‚Ä¢ 5x Carrot Seeds\n‚Ä¢ 3x Corn Seeds\n‚Ä¢ Access to entire farming system\n\nüåæ This unlocks everything - buy this first!",
		price = 100,
		currency = "coins",
		category = "farm",
		icon = "üåæ",
		maxQuantity = 1,
		type = "farmPlot",
		purchaseOrder = 1, -- MUST be first farm purchase
		effects = {
			enableFarming = true,
			starterSeeds = {
				carrot_seeds = 5,
				corn_seeds = 3
			}
		}
	},

	farm_plot_expansion = {
		id = "farm_plot_expansion",
		name = "üöú Farm Plot Expansion",
		description = "Expand your farming empire! More plots = more crops = more profit!\n\nüìà Benefits:\n‚Ä¢ +9 planting spots per plot\n‚Ä¢ Increase total farming capacity\n‚Ä¢ Support up to 10 plots maximum\n\nüöú Essential for scaling your operation!",
		price = 1000,
		currency = "coins",
		category = "farm",
		icon = "üöú",
		maxQuantity = 9,
		type = "farmPlot",
		purchaseOrder = 2, -- After getting started
		requiresPurchase = "farm_plot_starter"
	},

	-- ========== DEFENSE CATEGORY (Pest Control & Protection) ==========

	organic_pesticide = {
		id = "organic_pesticide",
		name = "üß™ Organic Pesticide",
		description = "Your first line of defense against crop pests!\n\nüí™ Effectiveness:\n‚Ä¢ Eliminates all pest types instantly\n‚Ä¢ 3x3 area of effect around target\n‚Ä¢ One-time use, eco-friendly formula\n\nüß™ Essential for protecting your investment!",
		price = 50,
		currency = "coins",
		category = "defense",
		icon = "üß™",
		maxQuantity = 20,
		type = "tool",
		purchaseOrder = 1 -- First defense tool
	},

	pest_detector = {
		id = "pest_detector",
		name = "üì° Pest Detector",
		description = "Early warning system for pest threats!\n\nüîç Features:\n‚Ä¢ Detect pests before major damage\n‚Ä¢ 20 stud detection range\n‚Ä¢ Automatic alerts and notifications\n‚Ä¢ One-time purchase, permanent benefit\n\nüì° Knowledge is power!",
		price = 250,
		currency = "coins",
		category = "defense",
		icon = "üì°",
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 2 -- Detection before automation
	},

	basic_chicken = {
		id = "basic_chicken",
		name = "üêî Basic Chicken",
		description = "Your first automated pest control solution!\n\nüõ°Ô∏è Protects Against:\n‚Ä¢ Aphids and small pests\n‚Ä¢ Patrols assigned area automatically\n\nüí∞ Bonus Production:\n‚Ä¢ Lays eggs every 4 minutes\n‚Ä¢ 5 coins per egg - pays for itself!\n\nüêî Essential farm worker!",
		price = 250,
		currency = "coins",
		category = "defense",
		icon = "üêî",
		maxQuantity = 20,
		type = "chicken",
		purchaseOrder = 3, -- First automated defense
		requiresPurchase = "farm_plot_starter"
	},

	basic_feed = {
		id = "basic_feed",
		name = "üåæ Basic Chicken Feed",
		description = "Keep your chickens healthy and working efficiently!\n\nüêî Benefits:\n‚Ä¢ Feeds chickens for 6 hours\n‚Ä¢ Maintains egg production\n‚Ä¢ Keeps chickens in good health\n‚Ä¢ Essential for chicken care\n\nüåæ Happy chickens = productive chickens!",
		price = 10,
		currency = "coins",
		category = "defense",
		icon = "üåæ",
		maxQuantity = 100,
		type = "feed",
		purchaseOrder = 4 -- Support chickens
	},

	guinea_fowl = {
		id = "guinea_fowl",
		name = "ü¶É Guinea Fowl",
		description = "Specialized anti-locust defender with early warning!\n\nüõ°Ô∏è Advanced Protection:\n‚Ä¢ Locust specialist - superior elimination\n‚Ä¢ Handles aphids and small pests too\n‚Ä¢ Provides pest alert system\n\nüí∞ Premium Production:\n‚Ä¢ Premium eggs every 6 minutes\n‚Ä¢ 8 coins per egg\n\nü¶É Professional pest control!",
		price = 500,
		currency = "coins",
		category = "defense",
		icon = "ü¶É",
		maxQuantity = 10,
		type = "chicken",
		purchaseOrder = 5, -- Advanced chicken
		requiresPurchase = "basic_chicken"
	},

	premium_feed = {
		id = "premium_feed",
		name = "‚≠ê Premium Chicken Feed",
		description = "High-quality nutrition for peak performance!\n\nüêî Premium Benefits:\n‚Ä¢ Feeds chickens for 12 hours\n‚Ä¢ +20% egg production boost\n‚Ä¢ Superior nutrition and health\n‚Ä¢ Happy chickens work harder!\n\n‚≠ê Investment in your workforce!",
		price = 50,
		currency = "coins",
		category = "defense",
		icon = "‚≠ê",
		maxQuantity = 50,
		type = "feed",
		purchaseOrder = 6, -- Better chicken care
		requiresPurchase = "basic_feed"
	},

	rooster = {
		id = "rooster",
		name = "üêì Rooster",
		description = "Elite flock leader that enhances all nearby chickens!\n\nüõ°Ô∏è Leadership Benefits:\n‚Ä¢ Boosts all chickens within range by 50%\n‚Ä¢ Reduces pest spawn rates by 20%\n‚Ä¢ Territory protection and organization\n\nüí∞ Premium Production:\n‚Ä¢ Premium eggs every 8 minutes\n‚Ä¢ 12 coins per egg\n\nüêì The ultimate flock manager!",
		price = 1000,
		currency = "coins",
		category = "defense",
		icon = "üêì",
		maxQuantity = 3,
		type = "chicken",
		purchaseOrder = 7, -- Elite chicken
		requiresPurchase = "guinea_fowl"
	},

	plot_roof_basic = {
		id = "plot_roof_basic",
		name = "üè† Basic Plot Roof",
		description = "Physical protection for your most valuable plots!\n\nüõ°Ô∏è Protection:\n‚Ä¢ Blocks UFO beam damage\n‚Ä¢ Weather damage immunity\n‚Ä¢ Covers 1 farm plot completely\n‚Ä¢ Durable construction\n\nüè† Secure your investment!",
		price = 200,
		currency = "coins",
		category = "defense",
		icon = "üè†",
		maxQuantity = 10,
		type = "protection",
		purchaseOrder = 8, -- Basic plot protection
		effects = {
			coverage = 1,
			ufoProtection = true,
			weatherProtection = true,
			plotSpecific = true
		}
	},

	plot_roof_reinforced = {
		id = "plot_roof_reinforced",
		name = "üèõÔ∏è Reinforced Plot Roof",
		description = "Enhanced protection with advanced materials!\n\nüõ°Ô∏è Enhanced Protection:\n‚Ä¢ 99% UFO damage reduction\n‚Ä¢ Complete weather immunity\n‚Ä¢ Self-repairing smart materials\n‚Ä¢ Covers 1 farm plot\n\nüèõÔ∏è Military-grade protection!",
		price = 500,
		currency = "coins",
		category = "defense",
		icon = "üèõÔ∏è",
		maxQuantity = 10,
		type = "protection",
		purchaseOrder = 9, -- Better plot protection
		requiresPurchase = "plot_roof_basic",
		effects = {
			coverage = 1,
			ufoProtection = true,
			weatherProtection = true,
			damageReduction = 0.99,
			selfRepairing = true,
			plotSpecific = true
		}
	},

	area_dome_small = {
		id = "area_dome_small",
		name = "üîò Small Protection Dome",
		description = "Energy dome technology protecting multiple plots!\n\nüõ°Ô∏è Area Protection:\n‚Ä¢ Protects 3 adjacent plots\n‚Ä¢ 100% UFO immunity\n‚Ä¢ Weather protection\n‚Ä¢ Pest deterrent energy field\n\nüîò Efficiency through area coverage!",
		price = 2500,
		currency = "coins",
		category = "defense",
		icon = "üîò",
		maxQuantity = 3,
		type = "protection",
		purchaseOrder = 10, -- Area protection
		requiresPurchase = "plot_roof_reinforced",
		effects = {
			coverage = 3,
			ufoProtection = true,
			weatherProtection = true,
			pestDeterrent = true,
			areaEffect = true
		}
	},

	area_dome_large = {
		id = "area_dome_large",
		name = "üîµ Large Protection Dome", 
		description = "Advanced energy dome with performance bonuses!\n\nüõ°Ô∏è Large Area Protection:\n‚Ä¢ Protects 6 adjacent plots\n‚Ä¢ Complete damage immunity\n‚Ä¢ +10% crop growth speed boost\n‚Ä¢ Auto-pest elimination field\n\nüîµ Protection with benefits!",
		price = 5000,
		currency = "coins",
		category = "defense",
		icon = "üîµ",
		maxQuantity = 2,
		type = "protection",
		purchaseOrder = 11, -- Large area protection
		requiresPurchase = "area_dome_small",
		effects = {
			coverage = 6,
			ufoProtection = true,
			weatherProtection = true,
			pestDeterrent = true,
			growthBoost = 0.1,
			autoPestElimination = true,
			areaEffect = true
		}
	},

	super_pesticide = {
		id = "super_pesticide",
		name = "üíâ Super Pesticide",
		description = "üèÜ PREMIUM PEST ELIMINATION üèÜ\nIndustrial-grade pesticide for emergency situations!\n\nüí™ Ultimate Power:\n‚Ä¢ Entire farm coverage instantly\n‚Ä¢ ALL pest types eliminated\n‚Ä¢ Immediate effect\n‚Ä¢ Premium farm token formula\n\nüíâ The nuclear option!",
		price = 25,
		currency = "farmTokens",
		category = "defense",
		icon = "üíâ",
		maxQuantity = 5,
		type = "tool",
		purchaseOrder = 12, -- Premium emergency tool
		requiresPurchase = "organic_pesticide"
	},

	mega_dome = {
		id = "mega_dome",
		name = "üõ°Ô∏è Mega Protection Dome",
		description = "üèÜ ULTIMATE PROTECTION SYSTEM üèÜ\nCovers ALL your plots with maximum benefits!\n\nüõ°Ô∏è Ultimate Defense:\n‚Ä¢ Covers ALL farm plots\n‚Ä¢ 100% damage immunity\n‚Ä¢ +25% crop growth boost\n‚Ä¢ Auto-harvest alerts\n‚Ä¢ Pest elimination field\n\nüõ°Ô∏è The ultimate farmer's shield!",
		price = 100,
		currency = "farmTokens",
		category = "defense",
		icon = "üõ°Ô∏è",
		maxQuantity = 1,
		type = "protection",
		purchaseOrder = 13, -- Ultimate protection
		requiresPurchase = "area_dome_large",
		effects = {
			coverage = 999,
			ufoProtection = true,
			weatherProtection = true,
			pestDeterrent = true,
			growthBoost = 0.25,
			autoHarvestAlerts = true,
			ultimateProtection = true
		}
	},

	-- ========== LIVESTOCK CATEGORY (Cow System) ==========

	basic_cow = {
		id = "basic_cow",
		name = "üêÑ Basic Cow",
		description = "Start your dairy empire with your first cow!\n\nü•õ Production:\n‚Ä¢ 1 milk every 5 seconds\n‚Ä¢ Steady income source\n‚Ä¢ Perfect for beginners\n\nüêÑ Your first step into livestock!",
		price = 0,
		currency = "coins",
		category = "farm",
		icon = "üêÑ",
		maxQuantity = 1,
		type = "cow",
		purchaseOrder = 3, -- After basic farming
		cowData = {
			tier = "basic",
			milkAmount = 1,
			cooldown = 5,
			visualEffects = {},
			maxCows = 1
		}
	},

	extra_basic_cow = {
		id = "extra_basic_cow",
		name = "üêÑ Additional Basic Cow",
		description = "Expand your herd! More cows = more milk = more profit!\n\nü•õ Production:\n‚Ä¢ 1 milk every 5 seconds per cow\n‚Ä¢ Each cow produces independently\n‚Ä¢ Stack up to 5 basic cows total\n\nüêÑ Build your dairy operation!",
		price = 1000,
		currency = "coins",
		category = "farm",
		icon = "üêÑ",
		maxQuantity = 4,
		type = "cow",
		purchaseOrder = 4, -- Additional cows
		requiresPurchase = "basic_cow",
		cowData = {
			tier = "basic",
			milkAmount = 1,
			cooldown = 5,
			visualEffects = {},
			maxCows = 5
		}
	},

	milk_efficiency_1 = {
		id = "milk_efficiency_1",
		name = "ü•õ Enhanced Milking I",
		description = "Improve your milking efficiency and output!\n\nüêÑ Benefits:\n‚Ä¢ -10 seconds cooldown\n‚Ä¢ +1 milk per collection\n‚Ä¢ Better cow happiness\n‚Ä¢ Tier 1 upgrade\n\nü•õ Work smarter, not harder!",
		price = 100,
		currency = "coins",
		category = "farm",
		icon = "ü•õ",
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 5 -- First efficiency upgrade
	},

	milk_efficiency_2 = {
		id = "milk_efficiency_2",
		name = "ü•õ Enhanced Milking II",
		description = "Further improve your milking operation!\n\nüêÑ Enhanced Benefits:\n‚Ä¢ -20 seconds total cooldown\n‚Ä¢ +3 milk per collection total\n‚Ä¢ Premium cow care techniques\n‚Ä¢ Tier 2 upgrade\n\nü•õ Professional dairy management!",
		price = 250,
		currency = "coins",
		category = "farm",
		icon = "ü•õ",
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 6, -- Second efficiency
		requiresPurchase = "milk_efficiency_1"
	},

	milk_efficiency_3 = {
		id = "milk_efficiency_3",
		name = "ü•õ Enhanced Milking III",
		description = "Maximum milking efficiency achieved!\n\nüêÑ Maximum Benefits:\n‚Ä¢ -30 seconds total cooldown\n‚Ä¢ +5 milk per collection total\n‚Ä¢ Expert cow management\n‚Ä¢ Tier 3 upgrade\n\nü•õ Peak performance achieved!",
		price = 500,
		currency = "coins",
		category = "farm",
		icon = "ü•õ",
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 7, -- Final efficiency
		requiresPurchase = "milk_efficiency_2"
	},

	milk_value_boost = {
		id = "milk_value_boost",
		name = "üí∞ Premium Milk Quality",
		description = "Increase the quality and market value of your milk!\n\nüí∞ Value Enhancement:\n‚Ä¢ +10 coins per milk sold\n‚Ä¢ Premium quality certification\n‚Ä¢ Better market reputation\n‚Ä¢ Permanent upgrade\n\nüí∞ Quality pays!",
		price = 300,
		currency = "coins",
		category = "farm",
		icon = "üí∞",
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 8 -- Value enhancement
	},

	silver_cow_upgrade = {
		id = "silver_cow_upgrade",
		name = "ü•à Silver Cow Upgrade",
		description = "Upgrade a basic cow to Silver tier!\n\nü•õ Silver Tier Benefits:\n‚Ä¢ 2 milk every 30 seconds\n‚Ä¢ Beautiful metallic shine\n‚Ä¢ Improved efficiency\n‚Ä¢ Upgrades one existing cow\n\nü•à First tier advancement!",
		price = 10000,
		currency = "coins",
		category = "farm",
		icon = "ü•à",
		maxQuantity = 5,
		type = "cow_upgrade",
		purchaseOrder = 9, -- First upgrade tier
		requiresPurchase = "basic_cow",
		cowData = {
			tier = "silver",
			milkAmount = 2,
			cooldown = 30,
			visualEffects = {"metallic_shine", "silver_particles"},
			upgradeFrom = "basic"
		}
	},

	gold_cow_upgrade = {
		id = "gold_cow_upgrade",
		name = "ü•á Gold Cow Upgrade",
		description = "Upgrade a silver cow to Gold tier!\n\nü•õ Gold Tier Benefits:\n‚Ä¢ 3 milk every 60 seconds\n‚Ä¢ Brilliant golden glow effect\n‚Ä¢ Premium tier efficiency\n‚Ä¢ Prestigious appearance\n\nü•á Elite cow status!",
		price = 25000,
		currency = "coins",
		category = "farm",
		icon = "ü•á",
		maxQuantity = 5,
		type = "cow_upgrade",
		purchaseOrder = 10, -- Second upgrade tier
		requiresPurchase = "silver_cow_upgrade",
		cowData = {
			tier = "gold",
			milkAmount = 3,
			cooldown = 60,
			visualEffects = {"golden_glow", "gold_sparkles", "light_aura"},
			upgradeFrom = "silver"
		}
	},

	diamond_cow_upgrade = {
		id = "diamond_cow_upgrade", 
		name = "üíé Diamond Cow Upgrade",
		description = "Upgrade a gold cow to Diamond tier!\n\nü•õ Diamond Tier Benefits:\n‚Ä¢ 5 milk every 60 seconds\n‚Ä¢ Crystalline beauty with rainbow effects\n‚Ä¢ Exceptional production efficiency\n‚Ä¢ Absolutely stunning appearance\n\nüíé Luxury farming at its finest!",
		price = 500000,
		currency = "coins",
		category = "farm",
		icon = "üíé",
		maxQuantity = 5,
		type = "cow_upgrade",
		purchaseOrder = 11, -- Third upgrade tier
		requiresPurchase = "gold_cow_upgrade",
		cowData = {
			tier = "diamond",
			milkAmount = 5,
			cooldown = 60,
			visualEffects = {"diamond_crystals", "rainbow_sparkles", "prismatic_aura"},
			upgradeFrom = "gold"
		}
	},

	pasture_expansion_1 = {
		id = "pasture_expansion_1",
		name = "üåø Pasture Expansion I",
		description = "Expand your cow capacity!\n\nüìà Capacity Benefits:\n‚Ä¢ +2 cow slots\n‚Ä¢ Better grazing areas\n‚Ä¢ Permanent upgrade\n‚Ä¢ Total capacity: 7 cows\n\nüåø Room to grow!",
		price = 2000,
		currency = "coins",
		category = "farm",
		icon = "üåø",
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 12, -- Capacity upgrade
		effects = {
			maxCowIncrease = 2
		}
	},

	pasture_expansion_2 = {
		id = "pasture_expansion_2", 
		name = "üåø Pasture Expansion II",
		description = "Further expand your dairy operation!\n\nüìà Enhanced Capacity:\n‚Ä¢ +3 additional cow slots\n‚Ä¢ Premium grazing areas\n‚Ä¢ Professional setup\n‚Ä¢ Total capacity: 10 cows\n\nüåø Serious dairy farming!",
		price = 5000,
		currency = "coins",
		category = "farm",
		icon = "üåø",
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 13, -- More capacity
		requiresPurchase = "pasture_expansion_1",
		effects = {
			maxCowIncrease = 3
		}
	},

	rainbow_cow_upgrade = {
		id = "rainbow_cow_upgrade",
		name = "üåà Rainbow Cow Upgrade", 
		description = "üèÜ PREMIUM FARM TOKEN UPGRADE üèÜ\nTransform a diamond cow into magical Rainbow tier!\n\nü•õ Rainbow Tier Benefits:\n‚Ä¢ 10 milk every 2 minutes\n‚Ä¢ Shifting rainbow colors\n‚Ä¢ Magical aura effects\n‚Ä¢ Premium tier status\n\nüåà Magic meets dairy farming!",
		price = 100,
		currency = "farmTokens",
		category = "farm",
		icon = "üåà",
		maxQuantity = 5,
		type = "cow_upgrade",
		purchaseOrder = 14, -- Premium upgrade
		requiresPurchase = "diamond_cow_upgrade",
		cowData = {
			tier = "rainbow",
			milkAmount = 10,
			cooldown = 120,
			visualEffects = {"rainbow_cycle", "magical_aura", "color_trails", "star_particles"},
			upgradeFrom = "diamond"
		}
	},

	mega_pasture = {
		id = "mega_pasture",
		name = "üèÜ Mega Pasture",
		description = "üèÜ ULTIMATE CAPACITY EXPANSION üèÜ\nThe largest possible dairy operation!\n\nüìà Ultimate Capacity:\n‚Ä¢ +5 cow slots\n‚Ä¢ Luxury grazing areas\n‚Ä¢ Premium facilities\n‚Ä¢ Total capacity: 15 cows\n\nüèÜ Dairy empire achieved!",
		price = 500,
		currency = "farmTokens",
		category = "farm",
		icon = "üèÜ", 
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 15, -- Ultimate capacity
		requiresPurchase = "pasture_expansion_2",
		effects = {
			maxCowIncrease = 5
		}
	},

	cosmic_cow_upgrade = {
		id = "cosmic_cow_upgrade",
		name = "üåå Cosmic Cow Upgrade",
		description = "üèÜ ULTIMATE PREMIUM UPGRADE üèÜ\nThe pinnacle of cow evolution!\n\nü•õ Cosmic Tier Benefits:\n‚Ä¢ 25 milk every 5 seconds\n‚Ä¢ Galaxy effects and cosmic energy\n‚Ä¢ Maximum production efficiency\n‚Ä¢ Legendary status\n\nüåå Transcend normal farming!",
		price = 750,
		currency = "farmTokens",
		category = "farm",
		icon = "üåå",
		maxQuantity = 3,
		type = "cow_upgrade",
		purchaseOrder = 16, -- Ultimate upgrade
		requiresPurchase = "rainbow_cow_upgrade",
		cowData = {
			tier = "cosmic",
			milkAmount = 25,
			cooldown = 5,
			visualEffects = {"galaxy_swirl", "cosmic_energy", "star_field", "nebula_clouds", "space_distortion"},
			upgradeFrom = "rainbow"
		}
	},

	-- ========== MINING CATEGORY ==========

	cave_access_pass = {
		id = "cave_access_pass",
		name = "üï≥Ô∏è Cave Access Pass",
		description = "üéØ UNLOCK MINING! Grants access to Cave 1 (Copper Mine)!\n\nüóª Mining Access:\n‚Ä¢ Cave 1: Copper Mine\n‚Ä¢ Copper and bronze ore deposits\n‚Ä¢ Mining tutorial area\n‚Ä¢ New income source\n\nüï≥Ô∏è Diversify your empire!",
		price = 10000,
		currency = "coins",
		category = "mining",
		icon = "üï≥Ô∏è",
		maxQuantity = 1,
		type = "access",
		purchaseOrder = 1 -- Mining access
	},

	basic_pickaxe = {
		id = "basic_pickaxe",
		name = "‚õèÔ∏è Basic Pickaxe",
		description = "Essential mining tool for resource gathering!\n\n‚õèÔ∏è Mining Power:\n‚Ä¢ Can mine copper and bronze ore\n‚Ä¢ 100 durability\n‚Ä¢ Entry-level mining tool\n‚Ä¢ Opens mining gameplay\n\n‚õèÔ∏è Start digging for treasure!",
		price = 250,
		currency = "coins",
		category = "mining",
		icon = "‚õèÔ∏è",
		maxQuantity = 1,
		type = "tool",
		purchaseOrder = 2 -- First mining tool
	},

	stone_pickaxe = {
		id = "stone_pickaxe",
		name = "ü™® Stone Pickaxe",
		description = "Improved mining tool with better capabilities!\n\n‚õèÔ∏è Enhanced Power:\n‚Ä¢ Can mine up to silver ore\n‚Ä¢ 150 durability\n‚Ä¢ 20% faster mining speed\n‚Ä¢ Sturdy construction\n\nü™® Upgrade your mining game!",
		price = 1000,
		currency = "coins",
		category = "mining",
		icon = "ü™®",
		maxQuantity = 1,
		type = "tool",
		purchaseOrder = 3, -- Pickaxe upgrade
		requiresPurchase = "basic_pickaxe"
	},

	iron_pickaxe = {
		id = "iron_pickaxe",
		name = "‚öíÔ∏è Iron Pickaxe",
		description = "Professional mining tool for serious miners!\n\n‚õèÔ∏è Professional Grade:\n‚Ä¢ Can mine up to gold ore\n‚Ä¢ 250 durability\n‚Ä¢ 50% faster mining speed\n‚Ä¢ Professional quality\n\n‚öíÔ∏è Professional mining power!",
		price = 5000,
		currency = "coins",
		category = "mining",
		icon = "‚öíÔ∏è",
		maxQuantity = 1,
		type = "tool",
		purchaseOrder = 4, -- Advanced tool
		requiresPurchase = "stone_pickaxe"
	},

	diamond_pickaxe = {
		id = "diamond_pickaxe",
		name = "üíé Diamond Pickaxe",
		description = "Premium mining tool for the most valuable ores!\n\n‚õèÔ∏è Premium Power:\n‚Ä¢ Can mine up to platinum ore\n‚Ä¢ 500 durability\n‚Ä¢ 150% faster mining speed\n‚Ä¢ Premium quality construction\n\nüíé Elite mining equipment!",
		price = 25000,
		currency = "coins",
		category = "mining",
		icon = "üíé",
		maxQuantity = 1,
		type = "tool",
		purchaseOrder = 5, -- Premium tool
		requiresPurchase = "iron_pickaxe"
	},

	obsidian_pickaxe = {
		id = "obsidian_pickaxe",
		name = "‚¨õ Obsidian Pickaxe",
		description = "üèÜ LEGENDARY MINING TOOL üèÜ\nCan mine the rarest ores including mystical obsidian!\n\n‚õèÔ∏è Legendary Power:\n‚Ä¢ Can mine ALL ore types\n‚Ä¢ 1000 durability\n‚Ä¢ 250% faster mining speed\n‚Ä¢ Legendary quality\n\n‚¨õ The ultimate mining tool!",
		price = 75,
		currency = "farmTokens",
		category = "mining",
		icon = "‚¨õ",
		maxQuantity = 1,
		type = "tool",
		purchaseOrder = 6, -- Ultimate tool
		requiresPurchase = "diamond_pickaxe"
	},

	-- ========== CRAFTING CATEGORY ==========

	basic_workbench = {
		id = "basic_workbench",
		name = "üî® Basic Workbench",
		description = "üéØ UNLOCK CRAFTING! Essential crafting station!\n\nüî® Crafting Options:\n‚Ä¢ Basic tools and equipment\n‚Ä¢ Simple wooden items\n‚Ä¢ Entry-level recipes\n‚Ä¢ New gameplay dimension\n\nüî® Create your own tools!",
		price = 50000,
		currency = "coins",
		category = "crafting",
		icon = "üî®",
		maxQuantity = 1,
		type = "building",
		purchaseOrder = 1 -- Crafting access
	},

	forge = {
		id = "forge",
		name = "üî• Advanced Forge",
		description = "Advanced metalworking station for powerful items!\n\nüî• Advanced Crafting:\n‚Ä¢ Metal tools and weapons\n‚Ä¢ Advanced equipment\n‚Ä¢ Ore processing capabilities\n‚Ä¢ Professional recipes\n\nüî• Master metalworking!",
		price = 100000,
		currency = "coins",
		category = "crafting",
		icon = "üî•",
		maxQuantity = 1,
		type = "building",
		purchaseOrder = 2, -- Advanced crafting
		requiresPurchase = "basic_workbench"
	},

	mystical_altar = {
		id = "mystical_altar",
		name = "üîÆ Mystical Altar",
		description = "üèÜ LEGENDARY CRAFTING STATION üèÜ\nCraft the most powerful and mystical items!\n\nüîÆ Mystical Powers:\n‚Ä¢ Legendary item creation\n‚Ä¢ Mystical equipment\n‚Ä¢ Magical enhancements\n‚Ä¢ Ultimate recipes\n\nüîÆ Transcend normal crafting!",
		price = 500,
		currency = "farmTokens",
		category = "crafting",
		icon = "üîÆ",
		maxQuantity = 1,
		type = "building",
		purchaseOrder = 3, -- Ultimate crafting
		requiresPurchase = "forge"
	},

	-- ========== PREMIUM CATEGORY ==========

	rarity_booster = {
		id = "rarity_booster",
		name = "‚ú® Rarity Booster",
		description = "üèÜ PREMIUM ENHANCEMENT üèÜ\nGuarantee better crop quality!\n\n‚ú® Rarity Benefits:\n‚Ä¢ Guarantees at least Rare quality\n‚Ä¢ Works for next 3 harvests\n‚Ä¢ Massive value increase\n‚Ä¢ Premium enhancement\n\n‚ú® Quality over quantity!",
		price = 25,
		currency = "farmTokens",
		category = "premium",
		icon = "‚ú®",
		maxQuantity = 5,
		type = "enhancement",
		purchaseOrder = 1 -- First premium item
	},

	auto_harvester = {
		id = "auto_harvester",
		name = "ü§ñ Auto Harvester",
		description = "üèÜ ULTIMATE FARMING AUTOMATION üèÜ\nNever manually harvest again!\n\nü§ñ Automation Features:\n‚Ä¢ Harvests all ready crops\n‚Ä¢ Works 24/7 automatically\n‚Ä¢ 30-second intervals\n‚Ä¢ No manual work needed\n\nü§ñ The ultimate upgrade!",
		price = 150,
		currency = "farmTokens",
		category = "premium",
		icon = "ü§ñ",
		maxQuantity = 1,
		type = "upgrade",
		purchaseOrder = 2 -- Ultimate automation
	},

	-- ========== ADDITIONAL UTILITY ITEMS ==========

	milk = {
		id = "milk",
		name = "Fresh Milk",
		price = 10,
		currency = "coins",
		category = "livestock",
		description = "Fresh milk collected from your cows. Can be sold for coins.",
		icon = "ü•õ",
		type = "material",
		maxQuantity = 999,
		notPurchasable = true,
		sellable = true,
		sellPrice = 5
	},

	cow_relocator = {
		id = "cow_relocator",
		name = "üöú Cow Relocator",
		description = "Organize your dairy operation efficiently!\n\nüîß Features:\n‚Ä¢ Move any cow to new location\n‚Ä¢ Reorganize farm layout\n‚Ä¢ One-time use per cow\n‚Ä¢ Works on all cow tiers\n\nüöú Farm management tool!",
		price = 100,
		currency = "coins",
		category = "farm",
		icon = "üöú",
		maxQuantity = 20,
		type = "tool",
		purchaseOrder = 17 -- Utility tool
	},
ExpansionShopItems = {
		farm_expansion_level_2 = {
			id = "farm_expansion_level_2",
			name = "Small Farm Expansion",
			description = "Expand your farm to 5x5 grid (25 planting spots)",
			price = 5000,
			currency = "coins",
			category = "Farm Expansions",
			icon = "üåæ",
			purchaseLimit = 1,
			requirements = {
				expansionLevel = 1, -- Must be level 1 to buy level 2
				farmPlotStarter = true -- Must have initial farm
			},
			effects = {
				type = "farm_expansion",
				targetLevel = 2,
				unlocksSpots = 16 -- 25 - 9 = 16 new spots
			},
			shopDisplay = {
				featured = true,
				order = 1
			}
		},

		farm_expansion_level_3 = {
			id = "farm_expansion_level_3",
			name = "Medium Farm Expansion",
			description = "Expand your farm to 7x7 grid (49 planting spots)",
			price = 15000,
			currency = "coins",
			category = "Farm Expansions", 
			icon = "üè°",
			purchaseLimit = 1,
			requirements = {
				expansionLevel = 2,
				farmPlotStarter = true
			},
			effects = {
				type = "farm_expansion",
				targetLevel = 3,
				unlocksSpots = 24 -- 49 - 25 = 24 new spots
			},
			shopDisplay = {
				featured = true,
				order = 2
			}
		},

		farm_expansion_level_4 = {
			id = "farm_expansion_level_4",
			name = "Large Farm Expansion",
			description = "Expand your farm to 9x9 grid (81 planting spots)",
			price = 35000,
			currency = "coins",
			category = "Farm Expansions",
			icon = "üèûÔ∏è",
			purchaseLimit = 1,
			requirements = {
				expansionLevel = 3,
				farmPlotStarter = true
			},
			effects = {
				type = "farm_expansion",
				targetLevel = 4,
				unlocksSpots = 32 // 81 - 49
			},
			shopDisplay = {
				featured = true,
				order = 3
			}
		},

		farm_expansion_level_5 = {
			id = "farm_expansion_level_5",
			name = "Mega Farm Expansion",
			description = "Expand your farm to ultimate 11x11 grid (121 planting spots)",
			price = 75000,
			currency = "coins",
			category = "Farm Expansions",
			icon = "üè∞",
			purchaseLimit = 1,
			requirements = {
				expansionLevel = 4,
				farmPlotStarter = true
			},
			effects = {
				type = "farm_expansion",
				targetLevel = 5,
				unlocksSpots = 40 // 121 - 81
			},
			shopDisplay = {
				featured = true,
				order = 4,
				highlight = "ULTIMATE"
			}
		}
	}
	}
-- ========== RARITY FUNCTIONS ==========

function ItemConfig.GetCropRarity(seedId, playerBoosters)
	playerBoosters = playerBoosters or {}

	local seedData = ItemConfig.ShopItems[seedId]
	if not seedData or not seedData.farmingData or not seedData.farmingData.rarityChances then
		return "common"
	end

	local chances = seedData.farmingData.rarityChances
	local roll = math.random()

	-- Apply rarity booster if active
	if playerBoosters.rarity_booster then
		return "rare" -- Guaranteed rare or better
	end

	-- Check for always high rarity seeds
	if seedData.farmingData.alwaysHighRarity then
		if roll < chances.legendary then return "legendary"
		elseif roll < chances.legendary + chances.epic then return "epic"
		elseif roll < chances.legendary + chances.epic + chances.rare then return "rare"
		else return "rare" -- Minimum rare for special seeds
		end
	end

	-- Normal rarity roll
	if roll < chances.legendary then return "legendary"
	elseif roll < chances.legendary + chances.epic then return "epic"
	elseif roll < chances.legendary + chances.epic + chances.rare then return "rare"
	elseif roll < chances.legendary + chances.epic + chances.rare + chances.uncommon then return "uncommon"
	else return "common"
	end
end

function ItemConfig.ApplyRarityToValue(baseValue, rarity)
	local rarityData = ItemConfig.RaritySystem[rarity]
	if rarityData then
		return math.floor(baseValue * rarityData.valueMultiplier)
	end
	return baseValue
end

function ItemConfig.GetRarityColor(rarity)
	local rarityData = ItemConfig.RaritySystem[rarity]
	return rarityData and rarityData.color or Color3.fromRGB(255, 255, 255)
end

function ItemConfig.GetRaritySize(rarity)
	local rarityData = ItemConfig.RaritySystem[rarity]
	return rarityData and rarityData.sizeMultiplier or 1.0
end

-- ========== CROP AND SEED MAPPING ==========

function ItemConfig.GetSeedData(seedId)
	local seed = ItemConfig.ShopItems[seedId]
	if seed and seed.type == "seed" and seed.farmingData then
		return seed.farmingData
	end
	return nil
end

function ItemConfig.GetCropData(cropId)
	return ItemConfig.Crops[cropId]
end

function ItemConfig.GetSeedForCrop(cropId)
	-- Find the seed that produces this crop
	for seedId, seedData in pairs(ItemConfig.ShopItems) do
		if seedData.type == "seed" and seedData.farmingData and seedData.farmingData.resultCropId == cropId then
			return seedId
		end
	end
	return nil
end

-- ========== MINING SYSTEM HELPERS ==========

function ItemConfig.GetOreData(oreId)
	return ItemConfig.MiningSystem.ores[oreId]
end

function ItemConfig.GetToolData(toolId)
	return ItemConfig.MiningSystem.tools[toolId]
end

function ItemConfig.CanToolMineOre(toolId, oreId)
	local toolData = ItemConfig.MiningSystem.tools[toolId]
	if not toolData or not toolData.canMine then
		return false
	end

	for _, mineable in ipairs(toolData.canMine) do
		if mineable == oreId then
			return true
		end
	end
	return false
end

-- ========== SELLING SYSTEM HELPERS ==========

function ItemConfig.IsItemSellable(itemId)
	-- Define which items can be sold
	local sellableTypes = {
		"crop", "material", "ore"
	}

	-- Check if it's a crop
	if ItemConfig.Crops[itemId] then
		return true
	end

	-- Check if it's milk or other sellable items
	local sellableItems = {
		"milk", "fresh_milk", "chicken_egg", "guinea_egg", "rooster_egg",
		"copper_ore", "bronze_ore", "silver_ore", "gold_ore", "platinum_ore", "obsidian_ore"
	}

	for _, sellableItem in ipairs(sellableItems) do
		if itemId == sellableItem then
			return true
		end
	end

	return false
end

function ItemConfig.GetItemSellPrice(itemId)
	-- Crop sell prices
	local cropData = ItemConfig.Crops[itemId]
	if cropData and cropData.sellValue then
		return cropData.sellValue
	end

	-- Other item sell prices
	local sellPrices = {
		-- Animal products
		milk = 75,
		fresh_milk = 75,
		chicken_egg = 15,
		guinea_egg = 20,
		rooster_egg = 25,

		-- Ores
		copper_ore = 30,
		bronze_ore = 45,
		silver_ore = 80,
		gold_ore = 150,
		platinum_ore = 300,
		obsidian_ore = 100, -- Sells for farmTokens

		-- Materials
		wood = 10,
		stone = 5
	}

	return sellPrices[itemId] or 0
end

-- ========== VALIDATION ==========

function ItemConfig.ValidateShopItem(itemId)
	local item = ItemConfig.ShopItems[itemId]
	if not item then return false, "Item not found" end

	local required = {"name", "price", "currency", "category", "description", "icon"}
	for _, prop in ipairs(required) do
		if not item[prop] then
			return false, "Missing property: " .. prop
		end
	end

	return true, "Valid item"
end

-- ========== UTILITY ==========

function ItemConfig.GetAllShopItems()
	return ItemConfig.ShopItems
end

function ItemConfig.GetItemsByCategory(category)
	local items = {}
	for itemId, item in pairs(ItemConfig.ShopItems) do
		if item.category == category then
			items[itemId] = item
		end
	end
	return items
end

function ItemConfig.CountItemsByCategory()
	local counts = {}
	for itemId, item in pairs(ItemConfig.ShopItems) do
		local category = item.category or "unknown"
		counts[category] = (counts[category] or 0) + 1
	end
	return counts
end

function ItemConfig.CountOresByCategory()
	local count = 0
	for _ in pairs(ItemConfig.MiningSystem.ores) do
		count = count + 1
	end
	return count
end

function ItemConfig.CountToolsByCategory()
	local count = 0
	for _ in pairs(ItemConfig.MiningSystem.tools) do
		count = count + 1
	end
	return count
end

-- ========== PURCHASE ORDER DEBUGGING ==========

function ItemConfig.DebugPurchaseOrder(category)
	print("=== PURCHASE ORDER DEBUG for " .. (category or "ALL") .. " ===")

	local items = {}
	for itemId, item in pairs(ItemConfig.ShopItems) do
		if not category or item.category == category then
			table.insert(items, {id = itemId, item = item})
		end
	end

	-- Sort by purchase order
	table.sort(items, function(a, b)
		local orderA = a.item.purchaseOrder or 999
		local orderB = b.item.purchaseOrder or 999

		if orderA == orderB then
			return a.item.price < b.item.price
		end

		return orderA < orderB
	end)

	for i, itemData in ipairs(items) do
		local item = itemData.item
		local orderInfo = item.purchaseOrder and ("[" .. item.purchaseOrder .. "]") or "[NO ORDER]"
		print(i .. ". " .. orderInfo .. " " .. item.name .. " - " .. item.price .. " " .. item.currency)
	end

	print("========================================")
end

print("‚úÖ REORDERED ItemConfig loaded with logical purchase progression!")
print("üì¶ Total shop items: " .. (function() local count = 0; for _ in pairs(ItemConfig.ShopItems) do count = count + 1 end return count end)())
print("‚õèÔ∏è Mining ores: " .. ItemConfig.CountOresByCategory())
print("üî® Mining tools: " .. ItemConfig.CountToolsByCategory())
print("üéØ Categories with purchase order:")
local counts = ItemConfig.CountItemsByCategory()
for category, count in pairs(counts) do
	print("  " .. category .. ": " .. count .. " items")
end
print("üåü Rarity system: ACTIVE with 5 tiers")
print("üå± Seed-to-crop mapping: COMPLETE")
print("‚õèÔ∏è Mining system data: COMPLETE")
print("üìã Purchase order system: ACTIVE")
print("")
print("üîß DEBUG COMMANDS:")
print("  ItemConfig.DebugPurchaseOrder() - Show all items ordered")
print("  ItemConfig.DebugPurchaseOrder('seeds') - Show specific category")

return ItemConfig